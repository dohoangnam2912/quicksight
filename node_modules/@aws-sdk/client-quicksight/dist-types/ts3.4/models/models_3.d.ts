import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import {
  AccountCustomization,
  AdHocFilteringOption,
  AnalysisDefaults,
  AssetOptions,
  CalculatedField,
  ColumnConfiguration,
  DashboardBehavior,
  DataSetIdentifierDeclaration,
  Edition,
  Entity,
  FilterGroup,
  ParameterDeclaration,
  QueryExecutionOptions,
  ResourceStatus,
  Sheet,
  TimeGranularity,
  TopicTimeGranularity,
  VisualMenuOption,
} from "./models_0";
import {
  AnalysisDefinition,
  AnalysisSourceEntity,
  AssignmentStatus,
  AuthenticationMethodOption,
  AuthorSpecifiedAggregation,
  BorderStyle,
  BrandDefinition,
  BrandDetail,
  ConstantType,
  DataSetReference,
  DataSourceParameters,
  DisplayFormat,
  DisplayFormatOptions,
  ExceptionResourceType,
  FilterClass,
  FilterOperator,
  ServiceType,
  SheetDefinition,
  SslProperties,
  StaticFile,
  Tag,
  VpcConnectionProperties,
} from "./models_2";
import { QuickSightServiceException as __BaseException } from "./QuickSightServiceException";
export interface CalculatedColumn {
  ColumnName: string | undefined;
  ColumnId: string | undefined;
  Expression: string | undefined;
}
export interface CancelIngestionRequest {
  AwsAccountId: string | undefined;
  DataSetId: string | undefined;
  IngestionId: string | undefined;
}
export interface CancelIngestionResponse {
  Arn?: string | undefined;
  IngestionId?: string | undefined;
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export declare class ResourceExistsException extends __BaseException {
  readonly name: "ResourceExistsException";
  readonly $fault: "client";
  Message?: string | undefined;
  ResourceType?: ExceptionResourceType | undefined;
  RequestId?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceExistsException, __BaseException>
  );
}
export declare const CapabilityState: {
  readonly DENY: "DENY";
};
export type CapabilityState =
  (typeof CapabilityState)[keyof typeof CapabilityState];
export interface Capabilities {
  ExportToCsv?: CapabilityState | undefined;
  ExportToExcel?: CapabilityState | undefined;
  CreateAndUpdateThemes?: CapabilityState | undefined;
  AddOrRunAnomalyDetectionForAnalyses?: CapabilityState | undefined;
  ShareAnalyses?: CapabilityState | undefined;
  CreateAndUpdateDatasets?: CapabilityState | undefined;
  ShareDatasets?: CapabilityState | undefined;
  SubscribeDashboardEmailReports?: CapabilityState | undefined;
  CreateAndUpdateDashboardEmailReports?: CapabilityState | undefined;
  ShareDashboards?: CapabilityState | undefined;
  CreateAndUpdateThresholdAlerts?: CapabilityState | undefined;
  RenameSharedFolders?: CapabilityState | undefined;
  CreateSharedFolders?: CapabilityState | undefined;
  CreateAndUpdateDataSources?: CapabilityState | undefined;
  ShareDataSources?: CapabilityState | undefined;
  ViewAccountSPICECapacity?: CapabilityState | undefined;
  CreateSPICEDataset?: CapabilityState | undefined;
}
export declare const ColumnDataType: {
  readonly DATETIME: "DATETIME";
  readonly DECIMAL: "DECIMAL";
  readonly INTEGER: "INTEGER";
  readonly STRING: "STRING";
};
export type ColumnDataType =
  (typeof ColumnDataType)[keyof typeof ColumnDataType];
export declare const ColumnDataSubType: {
  readonly FIXED: "FIXED";
  readonly FLOAT: "FLOAT";
};
export type ColumnDataSubType =
  (typeof ColumnDataSubType)[keyof typeof ColumnDataSubType];
export interface CastColumnTypeOperation {
  ColumnName: string | undefined;
  NewColumnType: ColumnDataType | undefined;
  SubType?: ColumnDataSubType | undefined;
  Format?: string | undefined;
}
export declare const CategoryFilterFunction: {
  readonly CONTAINS: "CONTAINS";
  readonly EXACT: "EXACT";
};
export type CategoryFilterFunction =
  (typeof CategoryFilterFunction)[keyof typeof CategoryFilterFunction];
export declare const CategoryFilterType: {
  readonly CUSTOM_FILTER: "CUSTOM_FILTER";
  readonly CUSTOM_FILTER_LIST: "CUSTOM_FILTER_LIST";
  readonly FILTER_LIST: "FILTER_LIST";
};
export type CategoryFilterType =
  (typeof CategoryFilterType)[keyof typeof CategoryFilterType];
export interface CellValueSynonym {
  CellValue?: string | undefined;
  Synonyms?: string[] | undefined;
}
export interface CollectiveConstant {
  ValueList?: string[] | undefined;
}
export declare const ColumnDataRole: {
  readonly DIMENSION: "DIMENSION";
  readonly MEASURE: "MEASURE";
};
export type ColumnDataRole =
  (typeof ColumnDataRole)[keyof typeof ColumnDataRole];
export interface ColumnDescription {
  Text?: string | undefined;
}
export declare const GeoSpatialCountryCode: {
  readonly US: "US";
};
export type GeoSpatialCountryCode =
  (typeof GeoSpatialCountryCode)[keyof typeof GeoSpatialCountryCode];
export interface GeoSpatialColumnGroup {
  Name: string | undefined;
  CountryCode?: GeoSpatialCountryCode | undefined;
  Columns: string[] | undefined;
}
export interface ColumnGroup {
  GeoSpatialColumnGroup?: GeoSpatialColumnGroup | undefined;
}
export interface ColumnGroupColumnSchema {
  Name?: string | undefined;
}
export interface ColumnGroupSchema {
  Name?: string | undefined;
  ColumnGroupColumnSchemaList?: ColumnGroupColumnSchema[] | undefined;
}
export interface ColumnLevelPermissionRule {
  Principals?: string[] | undefined;
  ColumnNames?: string[] | undefined;
}
export declare const ColumnOrderingType: {
  readonly GREATER_IS_BETTER: "GREATER_IS_BETTER";
  readonly LESSER_IS_BETTER: "LESSER_IS_BETTER";
  readonly SPECIFIED: "SPECIFIED";
};
export type ColumnOrderingType =
  (typeof ColumnOrderingType)[keyof typeof ColumnOrderingType];
export interface ColumnSchema {
  Name?: string | undefined;
  DataType?: string | undefined;
  GeographicRole?: string | undefined;
}
export declare const GeoSpatialDataRole: {
  readonly CITY: "CITY";
  readonly COUNTRY: "COUNTRY";
  readonly COUNTY: "COUNTY";
  readonly LATITUDE: "LATITUDE";
  readonly LONGITUDE: "LONGITUDE";
  readonly POSTCODE: "POSTCODE";
  readonly STATE: "STATE";
};
export type GeoSpatialDataRole =
  (typeof GeoSpatialDataRole)[keyof typeof GeoSpatialDataRole];
export interface ColumnTag {
  ColumnGeographicRole?: GeoSpatialDataRole | undefined;
  ColumnDescription?: ColumnDescription | undefined;
}
export declare const ColumnTagName: {
  readonly COLUMN_DESCRIPTION: "COLUMN_DESCRIPTION";
  readonly COLUMN_GEOGRAPHIC_ROLE: "COLUMN_GEOGRAPHIC_ROLE";
};
export type ColumnTagName = (typeof ColumnTagName)[keyof typeof ColumnTagName];
export declare const UndefinedSpecifiedValueType: {
  readonly LEAST: "LEAST";
  readonly MOST: "MOST";
};
export type UndefinedSpecifiedValueType =
  (typeof UndefinedSpecifiedValueType)[keyof typeof UndefinedSpecifiedValueType];
export interface ComparativeOrder {
  UseOrdering?: ColumnOrderingType | undefined;
  SpecifedOrder?: string[] | undefined;
  TreatUndefinedSpecifiedValues?: UndefinedSpecifiedValueType | undefined;
}
export declare class ConcurrentUpdatingException extends __BaseException {
  readonly name: "ConcurrentUpdatingException";
  readonly $fault: "server";
  Message?: string | undefined;
  RequestId?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ConcurrentUpdatingException, __BaseException>
  );
}
export interface CreateAccountCustomizationRequest {
  AwsAccountId: string | undefined;
  Namespace?: string | undefined;
  AccountCustomization: AccountCustomization | undefined;
  Tags?: Tag[] | undefined;
}
export interface CreateAccountCustomizationResponse {
  Arn?: string | undefined;
  AwsAccountId?: string | undefined;
  Namespace?: string | undefined;
  AccountCustomization?: AccountCustomization | undefined;
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export declare class ResourceUnavailableException extends __BaseException {
  readonly name: "ResourceUnavailableException";
  readonly $fault: "server";
  Message?: string | undefined;
  ResourceType?: ExceptionResourceType | undefined;
  RequestId?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceUnavailableException, __BaseException>
  );
}
export interface CreateAccountSubscriptionRequest {
  Edition?: Edition | undefined;
  AuthenticationMethod: AuthenticationMethodOption | undefined;
  AwsAccountId: string | undefined;
  AccountName: string | undefined;
  NotificationEmail: string | undefined;
  ActiveDirectoryName?: string | undefined;
  Realm?: string | undefined;
  DirectoryId?: string | undefined;
  AdminGroup?: string[] | undefined;
  AuthorGroup?: string[] | undefined;
  ReaderGroup?: string[] | undefined;
  AdminProGroup?: string[] | undefined;
  AuthorProGroup?: string[] | undefined;
  ReaderProGroup?: string[] | undefined;
  FirstName?: string | undefined;
  LastName?: string | undefined;
  EmailAddress?: string | undefined;
  ContactNumber?: string | undefined;
  IAMIdentityCenterInstanceArn?: string | undefined;
}
export interface SignupResponse {
  IAMUser?: boolean | undefined;
  userLoginName?: string | undefined;
  accountName?: string | undefined;
  directoryType?: string | undefined;
}
export interface CreateAccountSubscriptionResponse {
  SignupResponse?: SignupResponse | undefined;
  Status?: number | undefined;
  RequestId?: string | undefined;
}
export declare class PreconditionNotMetException extends __BaseException {
  readonly name: "PreconditionNotMetException";
  readonly $fault: "client";
  Message?: string | undefined;
  RequestId?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<PreconditionNotMetException, __BaseException>
  );
}
export interface DateTimeParameter {
  Name: string | undefined;
  Values: Date[] | undefined;
}
export interface DecimalParameter {
  Name: string | undefined;
  Values: number[] | undefined;
}
export interface IntegerParameter {
  Name: string | undefined;
  Values: number[] | undefined;
}
export interface StringParameter {
  Name: string | undefined;
  Values: string[] | undefined;
}
export interface _Parameters {
  StringParameters?: StringParameter[] | undefined;
  IntegerParameters?: IntegerParameter[] | undefined;
  DecimalParameters?: DecimalParameter[] | undefined;
  DateTimeParameters?: DateTimeParameter[] | undefined;
}
export interface ResourcePermission {
  Principal: string | undefined;
  Actions: string[] | undefined;
}
export declare const ValidationStrategyMode: {
  readonly LENIENT: "LENIENT";
  readonly STRICT: "STRICT";
};
export type ValidationStrategyMode =
  (typeof ValidationStrategyMode)[keyof typeof ValidationStrategyMode];
export interface ValidationStrategy {
  Mode: ValidationStrategyMode | undefined;
}
export interface CreateAnalysisRequest {
  AwsAccountId: string | undefined;
  AnalysisId: string | undefined;
  Name: string | undefined;
  Parameters?: _Parameters | undefined;
  Permissions?: ResourcePermission[] | undefined;
  SourceEntity?: AnalysisSourceEntity | undefined;
  ThemeArn?: string | undefined;
  Tags?: Tag[] | undefined;
  Definition?: AnalysisDefinition | undefined;
  ValidationStrategy?: ValidationStrategy | undefined;
  FolderArns?: string[] | undefined;
}
export interface CreateAnalysisResponse {
  Arn?: string | undefined;
  AnalysisId?: string | undefined;
  CreationStatus?: ResourceStatus | undefined;
  Status?: number | undefined;
  RequestId?: string | undefined;
}
export declare class LimitExceededException extends __BaseException {
  readonly name: "LimitExceededException";
  readonly $fault: "client";
  Message?: string | undefined;
  ResourceType?: ExceptionResourceType | undefined;
  RequestId?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<LimitExceededException, __BaseException>
  );
}
export declare class UnsupportedUserEditionException extends __BaseException {
  readonly name: "UnsupportedUserEditionException";
  readonly $fault: "client";
  Message?: string | undefined;
  RequestId?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      UnsupportedUserEditionException,
      __BaseException
    >
  );
}
export interface CreateBrandRequest {
  AwsAccountId: string | undefined;
  BrandId: string | undefined;
  BrandDefinition?: BrandDefinition | undefined;
  Tags?: Tag[] | undefined;
}
export interface CreateBrandResponse {
  RequestId?: string | undefined;
  BrandDetail?: BrandDetail | undefined;
  BrandDefinition?: BrandDefinition | undefined;
}
export declare class InternalServerException extends __BaseException {
  readonly name: "InternalServerException";
  readonly $fault: "server";
  Message: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InternalServerException, __BaseException>
  );
}
export declare class InvalidRequestException extends __BaseException {
  readonly name: "InvalidRequestException";
  readonly $fault: "client";
  Message?: string | undefined;
  RequestId?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidRequestException, __BaseException>
  );
}
export interface CreateColumnsOperation {
  Columns: CalculatedColumn[] | undefined;
}
export interface CreateCustomPermissionsRequest {
  AwsAccountId: string | undefined;
  CustomPermissionsName: string | undefined;
  Capabilities?: Capabilities | undefined;
  Tags?: Tag[] | undefined;
}
export interface CreateCustomPermissionsResponse {
  Status?: number | undefined;
  Arn?: string | undefined;
  RequestId?: string | undefined;
}
export interface DataPointDrillUpDownOption {
  AvailabilityStatus?: DashboardBehavior | undefined;
}
export interface DataPointMenuLabelOption {
  AvailabilityStatus?: DashboardBehavior | undefined;
}
export interface DataPointTooltipOption {
  AvailabilityStatus?: DashboardBehavior | undefined;
}
export interface DataQAEnabledOption {
  AvailabilityStatus?: DashboardBehavior | undefined;
}
export interface ExportToCSVOption {
  AvailabilityStatus?: DashboardBehavior | undefined;
}
export interface ExportWithHiddenFieldsOption {
  AvailabilityStatus?: DashboardBehavior | undefined;
}
export declare const DashboardUIState: {
  readonly COLLAPSED: "COLLAPSED";
  readonly EXPANDED: "EXPANDED";
};
export type DashboardUIState =
  (typeof DashboardUIState)[keyof typeof DashboardUIState];
export interface SheetControlsOption {
  VisibilityState?: DashboardUIState | undefined;
}
export interface SheetLayoutElementMaximizationOption {
  AvailabilityStatus?: DashboardBehavior | undefined;
}
export interface VisualAxisSortOption {
  AvailabilityStatus?: DashboardBehavior | undefined;
}
export interface ExportHiddenFieldsOption {
  AvailabilityStatus?: DashboardBehavior | undefined;
}
export interface DashboardVisualPublishOptions {
  ExportHiddenFieldsOption?: ExportHiddenFieldsOption | undefined;
}
export interface DashboardPublishOptions {
  AdHocFilteringOption?: AdHocFilteringOption | undefined;
  ExportToCSVOption?: ExportToCSVOption | undefined;
  SheetControlsOption?: SheetControlsOption | undefined;
  VisualPublishOptions?: DashboardVisualPublishOptions | undefined;
  SheetLayoutElementMaximizationOption?:
    | SheetLayoutElementMaximizationOption
    | undefined;
  VisualMenuOption?: VisualMenuOption | undefined;
  VisualAxisSortOption?: VisualAxisSortOption | undefined;
  ExportWithHiddenFieldsOption?: ExportWithHiddenFieldsOption | undefined;
  DataPointDrillUpDownOption?: DataPointDrillUpDownOption | undefined;
  DataPointMenuLabelOption?: DataPointMenuLabelOption | undefined;
  DataPointTooltipOption?: DataPointTooltipOption | undefined;
  DataQAEnabledOption?: DataQAEnabledOption | undefined;
}
export interface DashboardVersionDefinition {
  DataSetIdentifierDeclarations: DataSetIdentifierDeclaration[] | undefined;
  Sheets?: SheetDefinition[] | undefined;
  CalculatedFields?: CalculatedField[] | undefined;
  ParameterDeclarations?: ParameterDeclaration[] | undefined;
  FilterGroups?: FilterGroup[] | undefined;
  ColumnConfigurations?: ColumnConfiguration[] | undefined;
  AnalysisDefaults?: AnalysisDefaults | undefined;
  Options?: AssetOptions | undefined;
  StaticFiles?: StaticFile[] | undefined;
}
export interface LinkSharingConfiguration {
  Permissions?: ResourcePermission[] | undefined;
}
export interface DashboardSourceTemplate {
  DataSetReferences: DataSetReference[] | undefined;
  Arn: string | undefined;
}
export interface DashboardSourceEntity {
  SourceTemplate?: DashboardSourceTemplate | undefined;
}
export interface CreateDashboardRequest {
  AwsAccountId: string | undefined;
  DashboardId: string | undefined;
  Name: string | undefined;
  Parameters?: _Parameters | undefined;
  Permissions?: ResourcePermission[] | undefined;
  SourceEntity?: DashboardSourceEntity | undefined;
  Tags?: Tag[] | undefined;
  VersionDescription?: string | undefined;
  DashboardPublishOptions?: DashboardPublishOptions | undefined;
  ThemeArn?: string | undefined;
  Definition?: DashboardVersionDefinition | undefined;
  ValidationStrategy?: ValidationStrategy | undefined;
  FolderArns?: string[] | undefined;
  LinkSharingConfiguration?: LinkSharingConfiguration | undefined;
  LinkEntities?: string[] | undefined;
}
export interface CreateDashboardResponse {
  Arn?: string | undefined;
  VersionArn?: string | undefined;
  DashboardId?: string | undefined;
  CreationStatus?: ResourceStatus | undefined;
  Status?: number | undefined;
  RequestId?: string | undefined;
}
export interface DateTimeDatasetParameterDefaultValues {
  StaticValues?: Date[] | undefined;
}
export declare const DatasetParameterValueType: {
  readonly MULTI_VALUED: "MULTI_VALUED";
  readonly SINGLE_VALUED: "SINGLE_VALUED";
};
export type DatasetParameterValueType =
  (typeof DatasetParameterValueType)[keyof typeof DatasetParameterValueType];
export interface DateTimeDatasetParameter {
  Id: string | undefined;
  Name: string | undefined;
  ValueType: DatasetParameterValueType | undefined;
  TimeGranularity?: TimeGranularity | undefined;
  DefaultValues?: DateTimeDatasetParameterDefaultValues | undefined;
}
export interface DecimalDatasetParameterDefaultValues {
  StaticValues?: number[] | undefined;
}
export interface DecimalDatasetParameter {
  Id: string | undefined;
  Name: string | undefined;
  ValueType: DatasetParameterValueType | undefined;
  DefaultValues?: DecimalDatasetParameterDefaultValues | undefined;
}
export interface IntegerDatasetParameterDefaultValues {
  StaticValues?: number[] | undefined;
}
export interface IntegerDatasetParameter {
  Id: string | undefined;
  Name: string | undefined;
  ValueType: DatasetParameterValueType | undefined;
  DefaultValues?: IntegerDatasetParameterDefaultValues | undefined;
}
export interface StringDatasetParameterDefaultValues {
  StaticValues?: string[] | undefined;
}
export interface StringDatasetParameter {
  Id: string | undefined;
  Name: string | undefined;
  ValueType: DatasetParameterValueType | undefined;
  DefaultValues?: StringDatasetParameterDefaultValues | undefined;
}
export interface DatasetParameter {
  StringDatasetParameter?: StringDatasetParameter | undefined;
  DecimalDatasetParameter?: DecimalDatasetParameter | undefined;
  IntegerDatasetParameter?: IntegerDatasetParameter | undefined;
  DateTimeDatasetParameter?: DateTimeDatasetParameter | undefined;
}
export interface DataSetUsageConfiguration {
  DisableUseAsDirectQuerySource?: boolean | undefined;
  DisableUseAsImportedSource?: boolean | undefined;
}
export interface FieldFolder {
  description?: string | undefined;
  columns?: string[] | undefined;
}
export declare const DataSetImportMode: {
  readonly DIRECT_QUERY: "DIRECT_QUERY";
  readonly SPICE: "SPICE";
};
export type DataSetImportMode =
  (typeof DataSetImportMode)[keyof typeof DataSetImportMode];
export interface FilterOperation {
  ConditionExpression: string | undefined;
}
export interface NewDefaultValues {
  StringStaticValues?: string[] | undefined;
  DecimalStaticValues?: number[] | undefined;
  DateTimeStaticValues?: Date[] | undefined;
  IntegerStaticValues?: number[] | undefined;
}
export interface OverrideDatasetParameterOperation {
  ParameterName: string | undefined;
  NewParameterName?: string | undefined;
  NewDefaultValues?: NewDefaultValues | undefined;
}
export interface ProjectOperation {
  ProjectedColumns: string[] | undefined;
}
export interface RenameColumnOperation {
  ColumnName: string | undefined;
  NewColumnName: string | undefined;
}
export interface TagColumnOperation {
  ColumnName: string | undefined;
  Tags: ColumnTag[] | undefined;
}
export interface UntagColumnOperation {
  ColumnName: string | undefined;
  TagNames: ColumnTagName[] | undefined;
}
export type TransformOperation =
  | TransformOperation.CastColumnTypeOperationMember
  | TransformOperation.CreateColumnsOperationMember
  | TransformOperation.FilterOperationMember
  | TransformOperation.OverrideDatasetParameterOperationMember
  | TransformOperation.ProjectOperationMember
  | TransformOperation.RenameColumnOperationMember
  | TransformOperation.TagColumnOperationMember
  | TransformOperation.UntagColumnOperationMember
  | TransformOperation.$UnknownMember;
export declare namespace TransformOperation {
  interface ProjectOperationMember {
    ProjectOperation: ProjectOperation;
    FilterOperation?: never;
    CreateColumnsOperation?: never;
    RenameColumnOperation?: never;
    CastColumnTypeOperation?: never;
    TagColumnOperation?: never;
    UntagColumnOperation?: never;
    OverrideDatasetParameterOperation?: never;
    $unknown?: never;
  }
  interface FilterOperationMember {
    ProjectOperation?: never;
    FilterOperation: FilterOperation;
    CreateColumnsOperation?: never;
    RenameColumnOperation?: never;
    CastColumnTypeOperation?: never;
    TagColumnOperation?: never;
    UntagColumnOperation?: never;
    OverrideDatasetParameterOperation?: never;
    $unknown?: never;
  }
  interface CreateColumnsOperationMember {
    ProjectOperation?: never;
    FilterOperation?: never;
    CreateColumnsOperation: CreateColumnsOperation;
    RenameColumnOperation?: never;
    CastColumnTypeOperation?: never;
    TagColumnOperation?: never;
    UntagColumnOperation?: never;
    OverrideDatasetParameterOperation?: never;
    $unknown?: never;
  }
  interface RenameColumnOperationMember {
    ProjectOperation?: never;
    FilterOperation?: never;
    CreateColumnsOperation?: never;
    RenameColumnOperation: RenameColumnOperation;
    CastColumnTypeOperation?: never;
    TagColumnOperation?: never;
    UntagColumnOperation?: never;
    OverrideDatasetParameterOperation?: never;
    $unknown?: never;
  }
  interface CastColumnTypeOperationMember {
    ProjectOperation?: never;
    FilterOperation?: never;
    CreateColumnsOperation?: never;
    RenameColumnOperation?: never;
    CastColumnTypeOperation: CastColumnTypeOperation;
    TagColumnOperation?: never;
    UntagColumnOperation?: never;
    OverrideDatasetParameterOperation?: never;
    $unknown?: never;
  }
  interface TagColumnOperationMember {
    ProjectOperation?: never;
    FilterOperation?: never;
    CreateColumnsOperation?: never;
    RenameColumnOperation?: never;
    CastColumnTypeOperation?: never;
    TagColumnOperation: TagColumnOperation;
    UntagColumnOperation?: never;
    OverrideDatasetParameterOperation?: never;
    $unknown?: never;
  }
  interface UntagColumnOperationMember {
    ProjectOperation?: never;
    FilterOperation?: never;
    CreateColumnsOperation?: never;
    RenameColumnOperation?: never;
    CastColumnTypeOperation?: never;
    TagColumnOperation?: never;
    UntagColumnOperation: UntagColumnOperation;
    OverrideDatasetParameterOperation?: never;
    $unknown?: never;
  }
  interface OverrideDatasetParameterOperationMember {
    ProjectOperation?: never;
    FilterOperation?: never;
    CreateColumnsOperation?: never;
    RenameColumnOperation?: never;
    CastColumnTypeOperation?: never;
    TagColumnOperation?: never;
    UntagColumnOperation?: never;
    OverrideDatasetParameterOperation: OverrideDatasetParameterOperation;
    $unknown?: never;
  }
  interface $UnknownMember {
    ProjectOperation?: never;
    FilterOperation?: never;
    CreateColumnsOperation?: never;
    RenameColumnOperation?: never;
    CastColumnTypeOperation?: never;
    TagColumnOperation?: never;
    UntagColumnOperation?: never;
    OverrideDatasetParameterOperation?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    ProjectOperation: (value: ProjectOperation) => T;
    FilterOperation: (value: FilterOperation) => T;
    CreateColumnsOperation: (value: CreateColumnsOperation) => T;
    RenameColumnOperation: (value: RenameColumnOperation) => T;
    CastColumnTypeOperation: (value: CastColumnTypeOperation) => T;
    TagColumnOperation: (value: TagColumnOperation) => T;
    UntagColumnOperation: (value: UntagColumnOperation) => T;
    OverrideDatasetParameterOperation: (
      value: OverrideDatasetParameterOperation
    ) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: TransformOperation, visitor: Visitor<T>) => T;
}
export interface JoinKeyProperties {
  UniqueKey?: boolean | undefined;
}
export declare const JoinType: {
  readonly INNER: "INNER";
  readonly LEFT: "LEFT";
  readonly OUTER: "OUTER";
  readonly RIGHT: "RIGHT";
};
export type JoinType = (typeof JoinType)[keyof typeof JoinType];
export interface JoinInstruction {
  LeftOperand: string | undefined;
  RightOperand: string | undefined;
  LeftJoinKeyProperties?: JoinKeyProperties | undefined;
  RightJoinKeyProperties?: JoinKeyProperties | undefined;
  Type: JoinType | undefined;
  OnClause: string | undefined;
}
export interface LogicalTableSource {
  JoinInstruction?: JoinInstruction | undefined;
  PhysicalTableId?: string | undefined;
  DataSetArn?: string | undefined;
}
export interface LogicalTable {
  Alias: string | undefined;
  DataTransforms?: TransformOperation[] | undefined;
  Source: LogicalTableSource | undefined;
}
export interface UniqueKey {
  ColumnNames: string[] | undefined;
}
export interface PerformanceConfiguration {
  UniqueKeys?: UniqueKey[] | undefined;
}
export declare const InputColumnDataType: {
  readonly BIT: "BIT";
  readonly BOOLEAN: "BOOLEAN";
  readonly DATETIME: "DATETIME";
  readonly DECIMAL: "DECIMAL";
  readonly INTEGER: "INTEGER";
  readonly JSON: "JSON";
  readonly STRING: "STRING";
};
export type InputColumnDataType =
  (typeof InputColumnDataType)[keyof typeof InputColumnDataType];
export interface InputColumn {
  Name: string | undefined;
  Type: InputColumnDataType | undefined;
  SubType?: ColumnDataSubType | undefined;
}
export interface CustomSql {
  DataSourceArn: string | undefined;
  Name: string | undefined;
  SqlQuery: string | undefined;
  Columns?: InputColumn[] | undefined;
}
export interface RelationalTable {
  DataSourceArn: string | undefined;
  Catalog?: string | undefined;
  Schema?: string | undefined;
  Name: string | undefined;
  InputColumns: InputColumn[] | undefined;
}
export declare const FileFormat: {
  readonly CLF: "CLF";
  readonly CSV: "CSV";
  readonly ELF: "ELF";
  readonly JSON: "JSON";
  readonly TSV: "TSV";
  readonly XLSX: "XLSX";
};
export type FileFormat = (typeof FileFormat)[keyof typeof FileFormat];
export declare const TextQualifier: {
  readonly DOUBLE_QUOTE: "DOUBLE_QUOTE";
  readonly SINGLE_QUOTE: "SINGLE_QUOTE";
};
export type TextQualifier = (typeof TextQualifier)[keyof typeof TextQualifier];
export interface UploadSettings {
  Format?: FileFormat | undefined;
  StartFromRow?: number | undefined;
  ContainsHeader?: boolean | undefined;
  TextQualifier?: TextQualifier | undefined;
  Delimiter?: string | undefined;
}
export interface S3Source {
  DataSourceArn: string | undefined;
  UploadSettings?: UploadSettings | undefined;
  InputColumns: InputColumn[] | undefined;
}
export type PhysicalTable =
  | PhysicalTable.CustomSqlMember
  | PhysicalTable.RelationalTableMember
  | PhysicalTable.S3SourceMember
  | PhysicalTable.$UnknownMember;
export declare namespace PhysicalTable {
  interface RelationalTableMember {
    RelationalTable: RelationalTable;
    CustomSql?: never;
    S3Source?: never;
    $unknown?: never;
  }
  interface CustomSqlMember {
    RelationalTable?: never;
    CustomSql: CustomSql;
    S3Source?: never;
    $unknown?: never;
  }
  interface S3SourceMember {
    RelationalTable?: never;
    CustomSql?: never;
    S3Source: S3Source;
    $unknown?: never;
  }
  interface $UnknownMember {
    RelationalTable?: never;
    CustomSql?: never;
    S3Source?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    RelationalTable: (value: RelationalTable) => T;
    CustomSql: (value: CustomSql) => T;
    S3Source: (value: S3Source) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: PhysicalTable, visitor: Visitor<T>) => T;
}
export declare const RowLevelPermissionFormatVersion: {
  readonly VERSION_1: "VERSION_1";
  readonly VERSION_2: "VERSION_2";
};
export type RowLevelPermissionFormatVersion =
  (typeof RowLevelPermissionFormatVersion)[keyof typeof RowLevelPermissionFormatVersion];
export declare const RowLevelPermissionPolicy: {
  readonly DENY_ACCESS: "DENY_ACCESS";
  readonly GRANT_ACCESS: "GRANT_ACCESS";
};
export type RowLevelPermissionPolicy =
  (typeof RowLevelPermissionPolicy)[keyof typeof RowLevelPermissionPolicy];
export declare const Status: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type Status = (typeof Status)[keyof typeof Status];
export interface RowLevelPermissionDataSet {
  Namespace?: string | undefined;
  Arn: string | undefined;
  PermissionPolicy: RowLevelPermissionPolicy | undefined;
  FormatVersion?: RowLevelPermissionFormatVersion | undefined;
  Status?: Status | undefined;
}
export interface RowLevelPermissionTagRule {
  TagKey: string | undefined;
  ColumnName: string | undefined;
  TagMultiValueDelimiter?: string | undefined;
  MatchAllValue?: string | undefined;
}
export interface RowLevelPermissionTagConfiguration {
  Status?: Status | undefined;
  TagRules: RowLevelPermissionTagRule[] | undefined;
  TagRuleConfigurations?: string[][] | undefined;
}
export declare const DataSetUseAs: {
  readonly RLS_RULES: "RLS_RULES";
};
export type DataSetUseAs = (typeof DataSetUseAs)[keyof typeof DataSetUseAs];
export interface CreateDataSetRequest {
  AwsAccountId: string | undefined;
  DataSetId: string | undefined;
  Name: string | undefined;
  PhysicalTableMap: Record<string, PhysicalTable> | undefined;
  LogicalTableMap?: Record<string, LogicalTable> | undefined;
  ImportMode: DataSetImportMode | undefined;
  ColumnGroups?: ColumnGroup[] | undefined;
  FieldFolders?: Record<string, FieldFolder> | undefined;
  Permissions?: ResourcePermission[] | undefined;
  RowLevelPermissionDataSet?: RowLevelPermissionDataSet | undefined;
  RowLevelPermissionTagConfiguration?:
    | RowLevelPermissionTagConfiguration
    | undefined;
  ColumnLevelPermissionRules?: ColumnLevelPermissionRule[] | undefined;
  Tags?: Tag[] | undefined;
  DataSetUsageConfiguration?: DataSetUsageConfiguration | undefined;
  DatasetParameters?: DatasetParameter[] | undefined;
  FolderArns?: string[] | undefined;
  PerformanceConfiguration?: PerformanceConfiguration | undefined;
  UseAs?: DataSetUseAs | undefined;
}
export interface CreateDataSetResponse {
  Arn?: string | undefined;
  DataSetId?: string | undefined;
  IngestionArn?: string | undefined;
  IngestionId?: string | undefined;
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export interface CredentialPair {
  Username: string | undefined;
  Password: string | undefined;
  AlternateDataSourceParameters?: DataSourceParameters[] | undefined;
}
export interface DataSourceCredentials {
  CredentialPair?: CredentialPair | undefined;
  CopySourceArn?: string | undefined;
  SecretArn?: string | undefined;
}
export declare const DataSourceType: {
  readonly ADOBE_ANALYTICS: "ADOBE_ANALYTICS";
  readonly AMAZON_ELASTICSEARCH: "AMAZON_ELASTICSEARCH";
  readonly AMAZON_OPENSEARCH: "AMAZON_OPENSEARCH";
  readonly ATHENA: "ATHENA";
  readonly AURORA: "AURORA";
  readonly AURORA_POSTGRESQL: "AURORA_POSTGRESQL";
  readonly AWS_IOT_ANALYTICS: "AWS_IOT_ANALYTICS";
  readonly BIGQUERY: "BIGQUERY";
  readonly DATABRICKS: "DATABRICKS";
  readonly EXASOL: "EXASOL";
  readonly GITHUB: "GITHUB";
  readonly JIRA: "JIRA";
  readonly MARIADB: "MARIADB";
  readonly MYSQL: "MYSQL";
  readonly ORACLE: "ORACLE";
  readonly POSTGRESQL: "POSTGRESQL";
  readonly PRESTO: "PRESTO";
  readonly REDSHIFT: "REDSHIFT";
  readonly S3: "S3";
  readonly SALESFORCE: "SALESFORCE";
  readonly SERVICENOW: "SERVICENOW";
  readonly SNOWFLAKE: "SNOWFLAKE";
  readonly SPARK: "SPARK";
  readonly SQLSERVER: "SQLSERVER";
  readonly STARBURST: "STARBURST";
  readonly TERADATA: "TERADATA";
  readonly TIMESTREAM: "TIMESTREAM";
  readonly TRINO: "TRINO";
  readonly TWITTER: "TWITTER";
};
export type DataSourceType =
  (typeof DataSourceType)[keyof typeof DataSourceType];
export interface CreateDataSourceRequest {
  AwsAccountId: string | undefined;
  DataSourceId: string | undefined;
  Name: string | undefined;
  Type: DataSourceType | undefined;
  DataSourceParameters?: DataSourceParameters | undefined;
  Credentials?: DataSourceCredentials | undefined;
  Permissions?: ResourcePermission[] | undefined;
  VpcConnectionProperties?: VpcConnectionProperties | undefined;
  SslProperties?: SslProperties | undefined;
  Tags?: Tag[] | undefined;
  FolderArns?: string[] | undefined;
}
export interface CreateDataSourceResponse {
  Arn?: string | undefined;
  DataSourceId?: string | undefined;
  CreationStatus?: ResourceStatus | undefined;
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export declare class CustomerManagedKeyUnavailableException extends __BaseException {
  readonly name: "CustomerManagedKeyUnavailableException";
  readonly $fault: "client";
  Message?: string | undefined;
  RequestId?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<
      CustomerManagedKeyUnavailableException,
      __BaseException
    >
  );
}
export declare const FolderType: {
  readonly RESTRICTED: "RESTRICTED";
  readonly SHARED: "SHARED";
};
export type FolderType = (typeof FolderType)[keyof typeof FolderType];
export declare const SharingModel: {
  readonly ACCOUNT: "ACCOUNT";
  readonly NAMESPACE: "NAMESPACE";
};
export type SharingModel = (typeof SharingModel)[keyof typeof SharingModel];
export interface CreateFolderRequest {
  AwsAccountId: string | undefined;
  FolderId: string | undefined;
  Name?: string | undefined;
  FolderType?: FolderType | undefined;
  ParentFolderArn?: string | undefined;
  Permissions?: ResourcePermission[] | undefined;
  Tags?: Tag[] | undefined;
  SharingModel?: SharingModel | undefined;
}
export interface CreateFolderResponse {
  Status?: number | undefined;
  Arn?: string | undefined;
  FolderId?: string | undefined;
  RequestId?: string | undefined;
}
export declare const MemberType: {
  readonly ANALYSIS: "ANALYSIS";
  readonly DASHBOARD: "DASHBOARD";
  readonly DATASET: "DATASET";
  readonly DATASOURCE: "DATASOURCE";
  readonly TOPIC: "TOPIC";
};
export type MemberType = (typeof MemberType)[keyof typeof MemberType];
export interface CreateFolderMembershipRequest {
  AwsAccountId: string | undefined;
  FolderId: string | undefined;
  MemberId: string | undefined;
  MemberType: MemberType | undefined;
}
export interface FolderMember {
  MemberId?: string | undefined;
  MemberType?: MemberType | undefined;
}
export interface CreateFolderMembershipResponse {
  Status?: number | undefined;
  FolderMember?: FolderMember | undefined;
  RequestId?: string | undefined;
}
export interface CreateGroupRequest {
  GroupName: string | undefined;
  Description?: string | undefined;
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export interface Group {
  Arn?: string | undefined;
  GroupName?: string | undefined;
  Description?: string | undefined;
  PrincipalId?: string | undefined;
}
export interface CreateGroupResponse {
  Group?: Group | undefined;
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export interface CreateGroupMembershipRequest {
  MemberName: string | undefined;
  GroupName: string | undefined;
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export interface GroupMember {
  Arn?: string | undefined;
  MemberName?: string | undefined;
}
export interface CreateGroupMembershipResponse {
  GroupMember?: GroupMember | undefined;
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export interface CreateIAMPolicyAssignmentRequest {
  AwsAccountId: string | undefined;
  AssignmentName: string | undefined;
  AssignmentStatus: AssignmentStatus | undefined;
  PolicyArn?: string | undefined;
  Identities?: Record<string, string[]> | undefined;
  Namespace: string | undefined;
}
export interface CreateIAMPolicyAssignmentResponse {
  AssignmentName?: string | undefined;
  AssignmentId?: string | undefined;
  AssignmentStatus?: AssignmentStatus | undefined;
  PolicyArn?: string | undefined;
  Identities?: Record<string, string[]> | undefined;
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export declare const IngestionType: {
  readonly FULL_REFRESH: "FULL_REFRESH";
  readonly INCREMENTAL_REFRESH: "INCREMENTAL_REFRESH";
};
export type IngestionType = (typeof IngestionType)[keyof typeof IngestionType];
export interface CreateIngestionRequest {
  DataSetId: string | undefined;
  IngestionId: string | undefined;
  AwsAccountId: string | undefined;
  IngestionType?: IngestionType | undefined;
}
export declare const IngestionStatus: {
  readonly CANCELLED: "CANCELLED";
  readonly COMPLETED: "COMPLETED";
  readonly FAILED: "FAILED";
  readonly INITIALIZED: "INITIALIZED";
  readonly QUEUED: "QUEUED";
  readonly RUNNING: "RUNNING";
};
export type IngestionStatus =
  (typeof IngestionStatus)[keyof typeof IngestionStatus];
export interface CreateIngestionResponse {
  Arn?: string | undefined;
  IngestionId?: string | undefined;
  IngestionStatus?: IngestionStatus | undefined;
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export declare const IdentityStore: {
  readonly QUICKSIGHT: "QUICKSIGHT";
};
export type IdentityStore = (typeof IdentityStore)[keyof typeof IdentityStore];
export interface CreateNamespaceRequest {
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
  IdentityStore: IdentityStore | undefined;
  Tags?: Tag[] | undefined;
}
export declare const NamespaceStatus: {
  readonly CREATED: "CREATED";
  readonly CREATING: "CREATING";
  readonly DELETING: "DELETING";
  readonly NON_RETRYABLE_FAILURE: "NON_RETRYABLE_FAILURE";
  readonly RETRYABLE_FAILURE: "RETRYABLE_FAILURE";
};
export type NamespaceStatus =
  (typeof NamespaceStatus)[keyof typeof NamespaceStatus];
export interface CreateNamespaceResponse {
  Arn?: string | undefined;
  Name?: string | undefined;
  CapacityRegion?: string | undefined;
  CreationStatus?: NamespaceStatus | undefined;
  IdentityStore?: IdentityStore | undefined;
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export declare const RefreshInterval: {
  readonly DAILY: "DAILY";
  readonly HOURLY: "HOURLY";
  readonly MINUTE15: "MINUTE15";
  readonly MINUTE30: "MINUTE30";
  readonly MONTHLY: "MONTHLY";
  readonly WEEKLY: "WEEKLY";
};
export type RefreshInterval =
  (typeof RefreshInterval)[keyof typeof RefreshInterval];
export declare const DayOfWeek: {
  readonly FRIDAY: "FRIDAY";
  readonly MONDAY: "MONDAY";
  readonly SATURDAY: "SATURDAY";
  readonly SUNDAY: "SUNDAY";
  readonly THURSDAY: "THURSDAY";
  readonly TUESDAY: "TUESDAY";
  readonly WEDNESDAY: "WEDNESDAY";
};
export type DayOfWeek = (typeof DayOfWeek)[keyof typeof DayOfWeek];
export interface ScheduleRefreshOnEntity {
  DayOfWeek?: DayOfWeek | undefined;
  DayOfMonth?: string | undefined;
}
export interface RefreshFrequency {
  Interval: RefreshInterval | undefined;
  RefreshOnDay?: ScheduleRefreshOnEntity | undefined;
  Timezone?: string | undefined;
  TimeOfTheDay?: string | undefined;
}
export interface RefreshSchedule {
  ScheduleId: string | undefined;
  ScheduleFrequency: RefreshFrequency | undefined;
  StartAfterDateTime?: Date | undefined;
  RefreshType: IngestionType | undefined;
  Arn?: string | undefined;
}
export interface CreateRefreshScheduleRequest {
  DataSetId: string | undefined;
  AwsAccountId: string | undefined;
  Schedule: RefreshSchedule | undefined;
}
export interface CreateRefreshScheduleResponse {
  Status?: number | undefined;
  RequestId?: string | undefined;
  ScheduleId?: string | undefined;
  Arn?: string | undefined;
}
export declare const Role: {
  readonly ADMIN: "ADMIN";
  readonly ADMIN_PRO: "ADMIN_PRO";
  readonly AUTHOR: "AUTHOR";
  readonly AUTHOR_PRO: "AUTHOR_PRO";
  readonly READER: "READER";
  readonly READER_PRO: "READER_PRO";
};
export type Role = (typeof Role)[keyof typeof Role];
export interface CreateRoleMembershipRequest {
  MemberName: string | undefined;
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
  Role: Role | undefined;
}
export interface CreateRoleMembershipResponse {
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export interface DataSetSchema {
  ColumnSchemaList?: ColumnSchema[] | undefined;
}
export interface DataSetConfiguration {
  Placeholder?: string | undefined;
  DataSetSchema?: DataSetSchema | undefined;
  ColumnGroupSchemaList?: ColumnGroupSchema[] | undefined;
}
export interface TemplateVersionDefinition {
  DataSetConfigurations: DataSetConfiguration[] | undefined;
  Sheets?: SheetDefinition[] | undefined;
  CalculatedFields?: CalculatedField[] | undefined;
  ParameterDeclarations?: ParameterDeclaration[] | undefined;
  FilterGroups?: FilterGroup[] | undefined;
  ColumnConfigurations?: ColumnConfiguration[] | undefined;
  AnalysisDefaults?: AnalysisDefaults | undefined;
  Options?: AssetOptions | undefined;
  QueryExecutionOptions?: QueryExecutionOptions | undefined;
  StaticFiles?: StaticFile[] | undefined;
}
export interface TemplateSourceAnalysis {
  Arn: string | undefined;
  DataSetReferences: DataSetReference[] | undefined;
}
export interface TemplateSourceTemplate {
  Arn: string | undefined;
}
export interface TemplateSourceEntity {
  SourceAnalysis?: TemplateSourceAnalysis | undefined;
  SourceTemplate?: TemplateSourceTemplate | undefined;
}
export interface CreateTemplateRequest {
  AwsAccountId: string | undefined;
  TemplateId: string | undefined;
  Name?: string | undefined;
  Permissions?: ResourcePermission[] | undefined;
  SourceEntity?: TemplateSourceEntity | undefined;
  Tags?: Tag[] | undefined;
  VersionDescription?: string | undefined;
  Definition?: TemplateVersionDefinition | undefined;
  ValidationStrategy?: ValidationStrategy | undefined;
}
export interface CreateTemplateResponse {
  Arn?: string | undefined;
  VersionArn?: string | undefined;
  TemplateId?: string | undefined;
  CreationStatus?: ResourceStatus | undefined;
  Status?: number | undefined;
  RequestId?: string | undefined;
}
export interface CreateTemplateAliasRequest {
  AwsAccountId: string | undefined;
  TemplateId: string | undefined;
  AliasName: string | undefined;
  TemplateVersionNumber: number | undefined;
}
export interface TemplateAlias {
  AliasName?: string | undefined;
  Arn?: string | undefined;
  TemplateVersionNumber?: number | undefined;
}
export interface CreateTemplateAliasResponse {
  TemplateAlias?: TemplateAlias | undefined;
  Status?: number | undefined;
  RequestId?: string | undefined;
}
export interface DataColorPalette {
  Colors?: string[] | undefined;
  MinMaxGradient?: string[] | undefined;
  EmptyFillColor?: string | undefined;
}
export interface TileStyle {
  Border?: BorderStyle | undefined;
}
export interface GutterStyle {
  Show?: boolean | undefined;
}
export interface MarginStyle {
  Show?: boolean | undefined;
}
export interface TileLayoutStyle {
  Gutter?: GutterStyle | undefined;
  Margin?: MarginStyle | undefined;
}
export interface SheetStyle {
  Tile?: TileStyle | undefined;
  TileLayout?: TileLayoutStyle | undefined;
}
export interface Font {
  FontFamily?: string | undefined;
}
export interface Typography {
  FontFamilies?: Font[] | undefined;
}
export interface UIColorPalette {
  PrimaryForeground?: string | undefined;
  PrimaryBackground?: string | undefined;
  SecondaryForeground?: string | undefined;
  SecondaryBackground?: string | undefined;
  Accent?: string | undefined;
  AccentForeground?: string | undefined;
  Danger?: string | undefined;
  DangerForeground?: string | undefined;
  Warning?: string | undefined;
  WarningForeground?: string | undefined;
  Success?: string | undefined;
  SuccessForeground?: string | undefined;
  Dimension?: string | undefined;
  DimensionForeground?: string | undefined;
  Measure?: string | undefined;
  MeasureForeground?: string | undefined;
}
export interface ThemeConfiguration {
  DataColorPalette?: DataColorPalette | undefined;
  UIColorPalette?: UIColorPalette | undefined;
  Sheet?: SheetStyle | undefined;
  Typography?: Typography | undefined;
}
export interface CreateThemeRequest {
  AwsAccountId: string | undefined;
  ThemeId: string | undefined;
  Name: string | undefined;
  BaseThemeId: string | undefined;
  VersionDescription?: string | undefined;
  Configuration: ThemeConfiguration | undefined;
  Permissions?: ResourcePermission[] | undefined;
  Tags?: Tag[] | undefined;
}
export interface CreateThemeResponse {
  Arn?: string | undefined;
  VersionArn?: string | undefined;
  ThemeId?: string | undefined;
  CreationStatus?: ResourceStatus | undefined;
  Status?: number | undefined;
  RequestId?: string | undefined;
}
export interface CreateThemeAliasRequest {
  AwsAccountId: string | undefined;
  ThemeId: string | undefined;
  AliasName: string | undefined;
  ThemeVersionNumber: number | undefined;
}
export interface ThemeAlias {
  Arn?: string | undefined;
  AliasName?: string | undefined;
  ThemeVersionNumber?: number | undefined;
}
export interface CreateThemeAliasResponse {
  ThemeAlias?: ThemeAlias | undefined;
  Status?: number | undefined;
  RequestId?: string | undefined;
}
export interface TopicConfigOptions {
  QBusinessInsightsEnabled?: boolean | undefined;
}
export declare const DefaultAggregation: {
  readonly AVERAGE: "AVERAGE";
  readonly COUNT: "COUNT";
  readonly DISTINCT_COUNT: "DISTINCT_COUNT";
  readonly MAX: "MAX";
  readonly MEDIAN: "MEDIAN";
  readonly MIN: "MIN";
  readonly STDEV: "STDEV";
  readonly STDEVP: "STDEVP";
  readonly SUM: "SUM";
  readonly VAR: "VAR";
  readonly VARP: "VARP";
};
export type DefaultAggregation =
  (typeof DefaultAggregation)[keyof typeof DefaultAggregation];
export interface DefaultFormatting {
  DisplayFormat?: DisplayFormat | undefined;
  DisplayFormatOptions?: DisplayFormatOptions | undefined;
}
export interface SemanticType {
  TypeName?: string | undefined;
  SubTypeName?: string | undefined;
  TypeParameters?: Record<string, string> | undefined;
  TruthyCellValue?: string | undefined;
  TruthyCellValueSynonyms?: string[] | undefined;
  FalseyCellValue?: string | undefined;
  FalseyCellValueSynonyms?: string[] | undefined;
}
export interface TopicCalculatedField {
  CalculatedFieldName: string | undefined;
  CalculatedFieldDescription?: string | undefined;
  Expression: string | undefined;
  CalculatedFieldSynonyms?: string[] | undefined;
  IsIncludedInTopic?: boolean | undefined;
  DisableIndexing?: boolean | undefined;
  ColumnDataRole?: ColumnDataRole | undefined;
  TimeGranularity?: TopicTimeGranularity | undefined;
  DefaultFormatting?: DefaultFormatting | undefined;
  Aggregation?: DefaultAggregation | undefined;
  ComparativeOrder?: ComparativeOrder | undefined;
  SemanticType?: SemanticType | undefined;
  AllowedAggregations?: AuthorSpecifiedAggregation[] | undefined;
  NotAllowedAggregations?: AuthorSpecifiedAggregation[] | undefined;
  NeverAggregateInFilter?: boolean | undefined;
  CellValueSynonyms?: CellValueSynonym[] | undefined;
  NonAdditive?: boolean | undefined;
}
export interface TopicColumn {
  ColumnName: string | undefined;
  ColumnFriendlyName?: string | undefined;
  ColumnDescription?: string | undefined;
  ColumnSynonyms?: string[] | undefined;
  ColumnDataRole?: ColumnDataRole | undefined;
  Aggregation?: DefaultAggregation | undefined;
  IsIncludedInTopic?: boolean | undefined;
  DisableIndexing?: boolean | undefined;
  ComparativeOrder?: ComparativeOrder | undefined;
  SemanticType?: SemanticType | undefined;
  TimeGranularity?: TopicTimeGranularity | undefined;
  AllowedAggregations?: AuthorSpecifiedAggregation[] | undefined;
  NotAllowedAggregations?: AuthorSpecifiedAggregation[] | undefined;
  DefaultFormatting?: DefaultFormatting | undefined;
  NeverAggregateInFilter?: boolean | undefined;
  CellValueSynonyms?: CellValueSynonym[] | undefined;
  NonAdditive?: boolean | undefined;
}
export interface DataAggregation {
  DatasetRowDateGranularity?: TopicTimeGranularity | undefined;
  DefaultDateColumnName?: string | undefined;
}
export interface TopicCategoryFilterConstant {
  ConstantType?: ConstantType | undefined;
  SingularConstant?: string | undefined;
  CollectiveConstant?: CollectiveConstant | undefined;
}
export interface TopicCategoryFilter {
  CategoryFilterFunction?: CategoryFilterFunction | undefined;
  CategoryFilterType?: CategoryFilterType | undefined;
  Constant?: TopicCategoryFilterConstant | undefined;
  Inverse?: boolean | undefined;
}
export interface RangeConstant {
  Minimum?: string | undefined;
  Maximum?: string | undefined;
}
export interface TopicRangeFilterConstant {
  ConstantType?: ConstantType | undefined;
  RangeConstant?: RangeConstant | undefined;
}
export interface TopicDateRangeFilter {
  Inclusive?: boolean | undefined;
  Constant?: TopicRangeFilterConstant | undefined;
}
export declare const NamedFilterType: {
  readonly CATEGORY_FILTER: "CATEGORY_FILTER";
  readonly DATE_RANGE_FILTER: "DATE_RANGE_FILTER";
  readonly NUMERIC_EQUALITY_FILTER: "NUMERIC_EQUALITY_FILTER";
  readonly NUMERIC_RANGE_FILTER: "NUMERIC_RANGE_FILTER";
  readonly RELATIVE_DATE_FILTER: "RELATIVE_DATE_FILTER";
};
export type NamedFilterType =
  (typeof NamedFilterType)[keyof typeof NamedFilterType];
export declare const NamedFilterAggType: {
  readonly AVERAGE: "AVERAGE";
  readonly COUNT: "COUNT";
  readonly DISTINCT_COUNT: "DISTINCT_COUNT";
  readonly MAX: "MAX";
  readonly MEDIAN: "MEDIAN";
  readonly MIN: "MIN";
  readonly NO_AGGREGATION: "NO_AGGREGATION";
  readonly STDEV: "STDEV";
  readonly STDEVP: "STDEVP";
  readonly SUM: "SUM";
  readonly VAR: "VAR";
  readonly VARP: "VARP";
};
export type NamedFilterAggType =
  (typeof NamedFilterAggType)[keyof typeof NamedFilterAggType];
export interface TopicSingularFilterConstant {
  ConstantType?: ConstantType | undefined;
  SingularConstant?: string | undefined;
}
export interface TopicNumericEqualityFilter {
  Constant?: TopicSingularFilterConstant | undefined;
  Aggregation?: NamedFilterAggType | undefined;
}
export interface TopicNumericRangeFilter {
  Inclusive?: boolean | undefined;
  Constant?: TopicRangeFilterConstant | undefined;
  Aggregation?: NamedFilterAggType | undefined;
}
export declare const TopicRelativeDateFilterFunction: {
  readonly LAST: "LAST";
  readonly NEXT: "NEXT";
  readonly NOW: "NOW";
  readonly PREVIOUS: "PREVIOUS";
  readonly THIS: "THIS";
};
export type TopicRelativeDateFilterFunction =
  (typeof TopicRelativeDateFilterFunction)[keyof typeof TopicRelativeDateFilterFunction];
export interface TopicRelativeDateFilter {
  TimeGranularity?: TopicTimeGranularity | undefined;
  RelativeDateFilterFunction?: TopicRelativeDateFilterFunction | undefined;
  Constant?: TopicSingularFilterConstant | undefined;
}
export interface TopicFilter {
  FilterDescription?: string | undefined;
  FilterClass?: FilterClass | undefined;
  FilterName: string | undefined;
  FilterSynonyms?: string[] | undefined;
  OperandFieldName: string | undefined;
  FilterType?: NamedFilterType | undefined;
  CategoryFilter?: TopicCategoryFilter | undefined;
  NumericEqualityFilter?: TopicNumericEqualityFilter | undefined;
  NumericRangeFilter?: TopicNumericRangeFilter | undefined;
  DateRangeFilter?: TopicDateRangeFilter | undefined;
  RelativeDateFilter?: TopicRelativeDateFilter | undefined;
}
export declare const NamedEntityAggType: {
  readonly AVERAGE: "AVERAGE";
  readonly COUNT: "COUNT";
  readonly CUSTOM: "CUSTOM";
  readonly DISTINCT_COUNT: "DISTINCT_COUNT";
  readonly MAX: "MAX";
  readonly MEDIAN: "MEDIAN";
  readonly MIN: "MIN";
  readonly PERCENTILE: "PERCENTILE";
  readonly STDEV: "STDEV";
  readonly STDEVP: "STDEVP";
  readonly SUM: "SUM";
  readonly VAR: "VAR";
  readonly VARP: "VARP";
};
export type NamedEntityAggType =
  (typeof NamedEntityAggType)[keyof typeof NamedEntityAggType];
export interface NamedEntityDefinitionMetric {
  Aggregation?: NamedEntityAggType | undefined;
  AggregationFunctionParameters?: Record<string, string> | undefined;
}
export declare const PropertyRole: {
  readonly ID: "ID";
  readonly PRIMARY: "PRIMARY";
};
export type PropertyRole = (typeof PropertyRole)[keyof typeof PropertyRole];
export declare const PropertyUsage: {
  readonly DIMENSION: "DIMENSION";
  readonly INHERIT: "INHERIT";
  readonly MEASURE: "MEASURE";
};
export type PropertyUsage = (typeof PropertyUsage)[keyof typeof PropertyUsage];
export interface NamedEntityDefinition {
  FieldName?: string | undefined;
  PropertyName?: string | undefined;
  PropertyRole?: PropertyRole | undefined;
  PropertyUsage?: PropertyUsage | undefined;
  Metric?: NamedEntityDefinitionMetric | undefined;
}
export interface SemanticEntityType {
  TypeName?: string | undefined;
  SubTypeName?: string | undefined;
  TypeParameters?: Record<string, string> | undefined;
}
export interface TopicNamedEntity {
  EntityName: string | undefined;
  EntityDescription?: string | undefined;
  EntitySynonyms?: string[] | undefined;
  SemanticEntityType?: SemanticEntityType | undefined;
  Definition?: NamedEntityDefinition[] | undefined;
}
export interface DatasetMetadata {
  DatasetArn: string | undefined;
  DatasetName?: string | undefined;
  DatasetDescription?: string | undefined;
  DataAggregation?: DataAggregation | undefined;
  Filters?: TopicFilter[] | undefined;
  Columns?: TopicColumn[] | undefined;
  CalculatedFields?: TopicCalculatedField[] | undefined;
  NamedEntities?: TopicNamedEntity[] | undefined;
}
export declare const TopicUserExperienceVersion: {
  readonly LEGACY: "LEGACY";
  readonly NEW_READER_EXPERIENCE: "NEW_READER_EXPERIENCE";
};
export type TopicUserExperienceVersion =
  (typeof TopicUserExperienceVersion)[keyof typeof TopicUserExperienceVersion];
export interface TopicDetails {
  Name?: string | undefined;
  Description?: string | undefined;
  UserExperienceVersion?: TopicUserExperienceVersion | undefined;
  DataSets?: DatasetMetadata[] | undefined;
  ConfigOptions?: TopicConfigOptions | undefined;
}
export interface CreateTopicRequest {
  AwsAccountId: string | undefined;
  TopicId: string | undefined;
  Topic: TopicDetails | undefined;
  Tags?: Tag[] | undefined;
  FolderArns?: string[] | undefined;
}
export interface CreateTopicResponse {
  Arn?: string | undefined;
  TopicId?: string | undefined;
  RefreshArn?: string | undefined;
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export declare const TopicScheduleType: {
  readonly DAILY: "DAILY";
  readonly HOURLY: "HOURLY";
  readonly MONTHLY: "MONTHLY";
  readonly WEEKLY: "WEEKLY";
};
export type TopicScheduleType =
  (typeof TopicScheduleType)[keyof typeof TopicScheduleType];
export interface TopicRefreshSchedule {
  IsEnabled: boolean | undefined;
  BasedOnSpiceSchedule: boolean | undefined;
  StartingAt?: Date | undefined;
  Timezone?: string | undefined;
  RepeatAt?: string | undefined;
  TopicScheduleType?: TopicScheduleType | undefined;
}
export interface CreateTopicRefreshScheduleRequest {
  AwsAccountId: string | undefined;
  TopicId: string | undefined;
  DatasetArn: string | undefined;
  DatasetName?: string | undefined;
  RefreshSchedule: TopicRefreshSchedule | undefined;
}
export interface CreateTopicRefreshScheduleResponse {
  TopicId?: string | undefined;
  TopicArn?: string | undefined;
  DatasetArn?: string | undefined;
  Status?: number | undefined;
  RequestId?: string | undefined;
}
export interface CreateVPCConnectionRequest {
  AwsAccountId: string | undefined;
  VPCConnectionId: string | undefined;
  Name: string | undefined;
  SubnetIds: string[] | undefined;
  SecurityGroupIds: string[] | undefined;
  DnsResolvers?: string[] | undefined;
  RoleArn: string | undefined;
  Tags?: Tag[] | undefined;
}
export declare const VPCConnectionAvailabilityStatus: {
  readonly AVAILABLE: "AVAILABLE";
  readonly PARTIALLY_AVAILABLE: "PARTIALLY_AVAILABLE";
  readonly UNAVAILABLE: "UNAVAILABLE";
};
export type VPCConnectionAvailabilityStatus =
  (typeof VPCConnectionAvailabilityStatus)[keyof typeof VPCConnectionAvailabilityStatus];
export declare const VPCConnectionResourceStatus: {
  readonly CREATION_FAILED: "CREATION_FAILED";
  readonly CREATION_IN_PROGRESS: "CREATION_IN_PROGRESS";
  readonly CREATION_SUCCESSFUL: "CREATION_SUCCESSFUL";
  readonly DELETED: "DELETED";
  readonly DELETION_FAILED: "DELETION_FAILED";
  readonly DELETION_IN_PROGRESS: "DELETION_IN_PROGRESS";
  readonly UPDATE_FAILED: "UPDATE_FAILED";
  readonly UPDATE_IN_PROGRESS: "UPDATE_IN_PROGRESS";
  readonly UPDATE_SUCCESSFUL: "UPDATE_SUCCESSFUL";
};
export type VPCConnectionResourceStatus =
  (typeof VPCConnectionResourceStatus)[keyof typeof VPCConnectionResourceStatus];
export interface CreateVPCConnectionResponse {
  Arn?: string | undefined;
  VPCConnectionId?: string | undefined;
  CreationStatus?: VPCConnectionResourceStatus | undefined;
  AvailabilityStatus?: VPCConnectionAvailabilityStatus | undefined;
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export interface CustomPermissions {
  Arn?: string | undefined;
  CustomPermissionsName?: string | undefined;
  Capabilities?: Capabilities | undefined;
}
export declare const DashboardErrorType: {
  readonly ACCESS_DENIED: "ACCESS_DENIED";
  readonly COLUMN_GEOGRAPHIC_ROLE_MISMATCH: "COLUMN_GEOGRAPHIC_ROLE_MISMATCH";
  readonly COLUMN_REPLACEMENT_MISSING: "COLUMN_REPLACEMENT_MISSING";
  readonly COLUMN_TYPE_MISMATCH: "COLUMN_TYPE_MISMATCH";
  readonly DATA_SET_NOT_FOUND: "DATA_SET_NOT_FOUND";
  readonly INTERNAL_FAILURE: "INTERNAL_FAILURE";
  readonly PARAMETER_NOT_FOUND: "PARAMETER_NOT_FOUND";
  readonly PARAMETER_TYPE_INVALID: "PARAMETER_TYPE_INVALID";
  readonly PARAMETER_VALUE_INCOMPATIBLE: "PARAMETER_VALUE_INCOMPATIBLE";
  readonly SOURCE_NOT_FOUND: "SOURCE_NOT_FOUND";
};
export type DashboardErrorType =
  (typeof DashboardErrorType)[keyof typeof DashboardErrorType];
export interface DashboardError {
  Type?: DashboardErrorType | undefined;
  Message?: string | undefined;
  ViolatedEntities?: Entity[] | undefined;
}
export interface DashboardVersion {
  CreatedTime?: Date | undefined;
  Errors?: DashboardError[] | undefined;
  VersionNumber?: number | undefined;
  Status?: ResourceStatus | undefined;
  Arn?: string | undefined;
  SourceEntityArn?: string | undefined;
  DataSetArns?: string[] | undefined;
  Description?: string | undefined;
  ThemeArn?: string | undefined;
  Sheets?: Sheet[] | undefined;
}
export interface Dashboard {
  DashboardId?: string | undefined;
  Arn?: string | undefined;
  Name?: string | undefined;
  Version?: DashboardVersion | undefined;
  CreatedTime?: Date | undefined;
  LastPublishedTime?: Date | undefined;
  LastUpdatedTime?: Date | undefined;
  LinkEntities?: string[] | undefined;
}
export declare const DashboardFilterAttribute: {
  readonly DASHBOARD_NAME: "DASHBOARD_NAME";
  readonly DIRECT_QUICKSIGHT_OWNER: "DIRECT_QUICKSIGHT_OWNER";
  readonly DIRECT_QUICKSIGHT_SOLE_OWNER: "DIRECT_QUICKSIGHT_SOLE_OWNER";
  readonly DIRECT_QUICKSIGHT_VIEWER_OR_OWNER: "DIRECT_QUICKSIGHT_VIEWER_OR_OWNER";
  readonly QUICKSIGHT_OWNER: "QUICKSIGHT_OWNER";
  readonly QUICKSIGHT_USER: "QUICKSIGHT_USER";
  readonly QUICKSIGHT_VIEWER_OR_OWNER: "QUICKSIGHT_VIEWER_OR_OWNER";
};
export type DashboardFilterAttribute =
  (typeof DashboardFilterAttribute)[keyof typeof DashboardFilterAttribute];
export interface DashboardSearchFilter {
  Operator: FilterOperator | undefined;
  Name?: DashboardFilterAttribute | undefined;
  Value?: string | undefined;
}
export declare const DashboardsQAStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type DashboardsQAStatus =
  (typeof DashboardsQAStatus)[keyof typeof DashboardsQAStatus];
export interface DashboardSummary {
  Arn?: string | undefined;
  DashboardId?: string | undefined;
  Name?: string | undefined;
  CreatedTime?: Date | undefined;
  LastUpdatedTime?: Date | undefined;
  PublishedVersionNumber?: number | undefined;
  LastPublishedTime?: Date | undefined;
}
export interface DashboardVersionSummary {
  Arn?: string | undefined;
  CreatedTime?: Date | undefined;
  VersionNumber?: number | undefined;
  Status?: ResourceStatus | undefined;
  SourceEntityArn?: string | undefined;
  Description?: string | undefined;
}
export interface DashboardVisualResult {
  DashboardId?: string | undefined;
  DashboardName?: string | undefined;
  SheetId?: string | undefined;
  SheetName?: string | undefined;
  VisualId?: string | undefined;
  VisualTitle?: string | undefined;
  VisualSubtitle?: string | undefined;
  DashboardUrl?: string | undefined;
}
export interface OutputColumn {
  Name?: string | undefined;
  Description?: string | undefined;
  Type?: ColumnDataType | undefined;
  SubType?: ColumnDataSubType | undefined;
}
export interface DataSet {
  Arn?: string | undefined;
  DataSetId?: string | undefined;
  Name?: string | undefined;
  CreatedTime?: Date | undefined;
  LastUpdatedTime?: Date | undefined;
  PhysicalTableMap?: Record<string, PhysicalTable> | undefined;
  LogicalTableMap?: Record<string, LogicalTable> | undefined;
  OutputColumns?: OutputColumn[] | undefined;
  ImportMode?: DataSetImportMode | undefined;
  ConsumedSpiceCapacityInBytes?: number | undefined;
  ColumnGroups?: ColumnGroup[] | undefined;
  FieldFolders?: Record<string, FieldFolder> | undefined;
  RowLevelPermissionDataSet?: RowLevelPermissionDataSet | undefined;
  RowLevelPermissionTagConfiguration?:
    | RowLevelPermissionTagConfiguration
    | undefined;
  ColumnLevelPermissionRules?: ColumnLevelPermissionRule[] | undefined;
  DataSetUsageConfiguration?: DataSetUsageConfiguration | undefined;
  DatasetParameters?: DatasetParameter[] | undefined;
  PerformanceConfiguration?: PerformanceConfiguration | undefined;
  UseAs?: DataSetUseAs | undefined;
}
export declare const DataSetFilterAttribute: {
  readonly DATASET_NAME: "DATASET_NAME";
  readonly DIRECT_QUICKSIGHT_OWNER: "DIRECT_QUICKSIGHT_OWNER";
  readonly DIRECT_QUICKSIGHT_SOLE_OWNER: "DIRECT_QUICKSIGHT_SOLE_OWNER";
  readonly DIRECT_QUICKSIGHT_VIEWER_OR_OWNER: "DIRECT_QUICKSIGHT_VIEWER_OR_OWNER";
  readonly QUICKSIGHT_OWNER: "QUICKSIGHT_OWNER";
  readonly QUICKSIGHT_VIEWER_OR_OWNER: "QUICKSIGHT_VIEWER_OR_OWNER";
};
export type DataSetFilterAttribute =
  (typeof DataSetFilterAttribute)[keyof typeof DataSetFilterAttribute];
export interface DataSetSearchFilter {
  Operator: FilterOperator | undefined;
  Name: DataSetFilterAttribute | undefined;
  Value: string | undefined;
}
export interface DataSetSummary {
  Arn?: string | undefined;
  DataSetId?: string | undefined;
  Name?: string | undefined;
  CreatedTime?: Date | undefined;
  LastUpdatedTime?: Date | undefined;
  ImportMode?: DataSetImportMode | undefined;
  RowLevelPermissionDataSet?: RowLevelPermissionDataSet | undefined;
  RowLevelPermissionTagConfigurationApplied?: boolean | undefined;
  ColumnLevelPermissionRulesApplied?: boolean | undefined;
  UseAs?: DataSetUseAs | undefined;
}
export declare const DataSourceErrorInfoType: {
  readonly ACCESS_DENIED: "ACCESS_DENIED";
  readonly CONFLICT: "CONFLICT";
  readonly COPY_SOURCE_NOT_FOUND: "COPY_SOURCE_NOT_FOUND";
  readonly ENGINE_VERSION_NOT_SUPPORTED: "ENGINE_VERSION_NOT_SUPPORTED";
  readonly GENERIC_SQL_FAILURE: "GENERIC_SQL_FAILURE";
  readonly TIMEOUT: "TIMEOUT";
  readonly UNKNOWN: "UNKNOWN";
  readonly UNKNOWN_HOST: "UNKNOWN_HOST";
};
export type DataSourceErrorInfoType =
  (typeof DataSourceErrorInfoType)[keyof typeof DataSourceErrorInfoType];
export interface DataSourceErrorInfo {
  Type?: DataSourceErrorInfoType | undefined;
  Message?: string | undefined;
}
export interface DataSource {
  Arn?: string | undefined;
  DataSourceId?: string | undefined;
  Name?: string | undefined;
  Type?: DataSourceType | undefined;
  Status?: ResourceStatus | undefined;
  CreatedTime?: Date | undefined;
  LastUpdatedTime?: Date | undefined;
  DataSourceParameters?: DataSourceParameters | undefined;
  AlternateDataSourceParameters?: DataSourceParameters[] | undefined;
  VpcConnectionProperties?: VpcConnectionProperties | undefined;
  SslProperties?: SslProperties | undefined;
  ErrorInfo?: DataSourceErrorInfo | undefined;
  SecretArn?: string | undefined;
}
export declare const DataSourceFilterAttribute: {
  readonly DATASOURCE_NAME: "DATASOURCE_NAME";
  readonly DIRECT_QUICKSIGHT_OWNER: "DIRECT_QUICKSIGHT_OWNER";
  readonly DIRECT_QUICKSIGHT_SOLE_OWNER: "DIRECT_QUICKSIGHT_SOLE_OWNER";
  readonly DIRECT_QUICKSIGHT_VIEWER_OR_OWNER: "DIRECT_QUICKSIGHT_VIEWER_OR_OWNER";
};
export type DataSourceFilterAttribute =
  (typeof DataSourceFilterAttribute)[keyof typeof DataSourceFilterAttribute];
export interface DataSourceSearchFilter {
  Operator: FilterOperator | undefined;
  Name: DataSourceFilterAttribute | undefined;
  Value: string | undefined;
}
export interface DataSourceSummary {
  Arn?: string | undefined;
  DataSourceId?: string | undefined;
  Name?: string | undefined;
  Type?: DataSourceType | undefined;
  CreatedTime?: Date | undefined;
  LastUpdatedTime?: Date | undefined;
}
export interface DeleteAccountCustomizationRequest {
  AwsAccountId: string | undefined;
  Namespace?: string | undefined;
}
export interface DeleteAccountCustomizationResponse {
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export interface DeleteAccountSubscriptionRequest {
  AwsAccountId: string | undefined;
}
export interface DeleteAccountSubscriptionResponse {
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export interface DeleteAnalysisRequest {
  AwsAccountId: string | undefined;
  AnalysisId: string | undefined;
  RecoveryWindowInDays?: number | undefined;
  ForceDeleteWithoutRecovery?: boolean | undefined;
}
export interface DeleteAnalysisResponse {
  Status?: number | undefined;
  Arn?: string | undefined;
  AnalysisId?: string | undefined;
  DeletionTime?: Date | undefined;
  RequestId?: string | undefined;
}
export interface DeleteBrandRequest {
  AwsAccountId: string | undefined;
  BrandId: string | undefined;
}
export interface DeleteBrandResponse {
  RequestId?: string | undefined;
}
export interface DeleteBrandAssignmentRequest {
  AwsAccountId: string | undefined;
}
export interface DeleteBrandAssignmentResponse {
  RequestId?: string | undefined;
}
export interface DeleteCustomPermissionsRequest {
  AwsAccountId: string | undefined;
  CustomPermissionsName: string | undefined;
}
export interface DeleteCustomPermissionsResponse {
  Status?: number | undefined;
  Arn?: string | undefined;
  RequestId?: string | undefined;
}
export interface DeleteDashboardRequest {
  AwsAccountId: string | undefined;
  DashboardId: string | undefined;
  VersionNumber?: number | undefined;
}
export interface DeleteDashboardResponse {
  Status?: number | undefined;
  Arn?: string | undefined;
  DashboardId?: string | undefined;
  RequestId?: string | undefined;
}
export interface DeleteDataSetRequest {
  AwsAccountId: string | undefined;
  DataSetId: string | undefined;
}
export interface DeleteDataSetResponse {
  Arn?: string | undefined;
  DataSetId?: string | undefined;
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export interface DeleteDataSetRefreshPropertiesRequest {
  AwsAccountId: string | undefined;
  DataSetId: string | undefined;
}
export interface DeleteDataSetRefreshPropertiesResponse {
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export interface DeleteDataSourceRequest {
  AwsAccountId: string | undefined;
  DataSourceId: string | undefined;
}
export interface DeleteDataSourceResponse {
  Arn?: string | undefined;
  DataSourceId?: string | undefined;
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export interface DeleteDefaultQBusinessApplicationRequest {
  AwsAccountId: string | undefined;
  Namespace?: string | undefined;
}
export interface DeleteDefaultQBusinessApplicationResponse {
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export interface DeleteFolderRequest {
  AwsAccountId: string | undefined;
  FolderId: string | undefined;
}
export interface DeleteFolderResponse {
  Status?: number | undefined;
  Arn?: string | undefined;
  FolderId?: string | undefined;
  RequestId?: string | undefined;
}
export interface DeleteFolderMembershipRequest {
  AwsAccountId: string | undefined;
  FolderId: string | undefined;
  MemberId: string | undefined;
  MemberType: MemberType | undefined;
}
export interface DeleteFolderMembershipResponse {
  Status?: number | undefined;
  RequestId?: string | undefined;
}
export interface DeleteGroupRequest {
  GroupName: string | undefined;
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export interface DeleteGroupResponse {
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export interface DeleteGroupMembershipRequest {
  MemberName: string | undefined;
  GroupName: string | undefined;
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export interface DeleteGroupMembershipResponse {
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export interface DeleteIAMPolicyAssignmentRequest {
  AwsAccountId: string | undefined;
  AssignmentName: string | undefined;
  Namespace: string | undefined;
}
export interface DeleteIAMPolicyAssignmentResponse {
  AssignmentName?: string | undefined;
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export interface DeleteIdentityPropagationConfigRequest {
  AwsAccountId: string | undefined;
  Service: ServiceType | undefined;
}
export interface DeleteIdentityPropagationConfigResponse {
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export interface DeleteNamespaceRequest {
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export interface DeleteNamespaceResponse {
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export interface DeleteRefreshScheduleRequest {
  DataSetId: string | undefined;
  AwsAccountId: string | undefined;
  ScheduleId: string | undefined;
}
export interface DeleteRefreshScheduleResponse {
  Status?: number | undefined;
  RequestId?: string | undefined;
  ScheduleId?: string | undefined;
  Arn?: string | undefined;
}
export interface DeleteRoleCustomPermissionRequest {
  Role: Role | undefined;
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export interface DeleteRoleCustomPermissionResponse {
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export interface DeleteRoleMembershipRequest {
  MemberName: string | undefined;
  Role: Role | undefined;
  AwsAccountId: string | undefined;
  Namespace: string | undefined;
}
export interface DeleteRoleMembershipResponse {
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export interface DeleteTemplateRequest {
  AwsAccountId: string | undefined;
  TemplateId: string | undefined;
  VersionNumber?: number | undefined;
}
export interface DeleteTemplateResponse {
  RequestId?: string | undefined;
  Arn?: string | undefined;
  TemplateId?: string | undefined;
  Status?: number | undefined;
}
export interface DeleteTemplateAliasRequest {
  AwsAccountId: string | undefined;
  TemplateId: string | undefined;
  AliasName: string | undefined;
}
export interface DeleteTemplateAliasResponse {
  Status?: number | undefined;
  TemplateId?: string | undefined;
  AliasName?: string | undefined;
  Arn?: string | undefined;
  RequestId?: string | undefined;
}
export interface DeleteThemeRequest {
  AwsAccountId: string | undefined;
  ThemeId: string | undefined;
  VersionNumber?: number | undefined;
}
export interface DeleteThemeResponse {
  Arn?: string | undefined;
  RequestId?: string | undefined;
  Status?: number | undefined;
  ThemeId?: string | undefined;
}
export interface DeleteThemeAliasRequest {
  AwsAccountId: string | undefined;
  ThemeId: string | undefined;
  AliasName: string | undefined;
}
export interface DeleteThemeAliasResponse {
  AliasName?: string | undefined;
  Arn?: string | undefined;
  RequestId?: string | undefined;
  Status?: number | undefined;
  ThemeId?: string | undefined;
}
export interface DeleteTopicRequest {
  AwsAccountId: string | undefined;
  TopicId: string | undefined;
}
export interface DeleteTopicResponse {
  Arn?: string | undefined;
  TopicId?: string | undefined;
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export declare const CalculatedColumnFilterSensitiveLog: (
  obj: CalculatedColumn
) => any;
export declare const ColumnDescriptionFilterSensitiveLog: (
  obj: ColumnDescription
) => any;
export declare const ColumnTagFilterSensitiveLog: (obj: ColumnTag) => any;
export declare const DateTimeParameterFilterSensitiveLog: (
  obj: DateTimeParameter
) => any;
export declare const DecimalParameterFilterSensitiveLog: (
  obj: DecimalParameter
) => any;
export declare const IntegerParameterFilterSensitiveLog: (
  obj: IntegerParameter
) => any;
export declare const StringParameterFilterSensitiveLog: (
  obj: StringParameter
) => any;
export declare const _ParametersFilterSensitiveLog: (obj: _Parameters) => any;
export declare const CreateAnalysisRequestFilterSensitiveLog: (
  obj: CreateAnalysisRequest
) => any;
export declare const CreateColumnsOperationFilterSensitiveLog: (
  obj: CreateColumnsOperation
) => any;
export declare const DashboardVersionDefinitionFilterSensitiveLog: (
  obj: DashboardVersionDefinition
) => any;
export declare const CreateDashboardRequestFilterSensitiveLog: (
  obj: CreateDashboardRequest
) => any;
export declare const FilterOperationFilterSensitiveLog: (
  obj: FilterOperation
) => any;
export declare const TagColumnOperationFilterSensitiveLog: (
  obj: TagColumnOperation
) => any;
export declare const TransformOperationFilterSensitiveLog: (
  obj: TransformOperation
) => any;
export declare const LogicalTableFilterSensitiveLog: (obj: LogicalTable) => any;
export declare const RowLevelPermissionTagRuleFilterSensitiveLog: (
  obj: RowLevelPermissionTagRule
) => any;
export declare const RowLevelPermissionTagConfigurationFilterSensitiveLog: (
  obj: RowLevelPermissionTagConfiguration
) => any;
export declare const CreateDataSetRequestFilterSensitiveLog: (
  obj: CreateDataSetRequest
) => any;
export declare const DataSourceCredentialsFilterSensitiveLog: (
  obj: DataSourceCredentials
) => any;
export declare const CreateDataSourceRequestFilterSensitiveLog: (
  obj: CreateDataSourceRequest
) => any;
export declare const TemplateVersionDefinitionFilterSensitiveLog: (
  obj: TemplateVersionDefinition
) => any;
export declare const CreateTemplateRequestFilterSensitiveLog: (
  obj: CreateTemplateRequest
) => any;
export declare const SemanticTypeFilterSensitiveLog: (obj: SemanticType) => any;
export declare const TopicCalculatedFieldFilterSensitiveLog: (
  obj: TopicCalculatedField
) => any;
export declare const TopicColumnFilterSensitiveLog: (obj: TopicColumn) => any;
export declare const TopicCategoryFilterConstantFilterSensitiveLog: (
  obj: TopicCategoryFilterConstant
) => any;
export declare const TopicCategoryFilterFilterSensitiveLog: (
  obj: TopicCategoryFilter
) => any;
export declare const TopicRangeFilterConstantFilterSensitiveLog: (
  obj: TopicRangeFilterConstant
) => any;
export declare const TopicDateRangeFilterFilterSensitiveLog: (
  obj: TopicDateRangeFilter
) => any;
export declare const TopicSingularFilterConstantFilterSensitiveLog: (
  obj: TopicSingularFilterConstant
) => any;
export declare const TopicNumericEqualityFilterFilterSensitiveLog: (
  obj: TopicNumericEqualityFilter
) => any;
export declare const TopicNumericRangeFilterFilterSensitiveLog: (
  obj: TopicNumericRangeFilter
) => any;
export declare const TopicRelativeDateFilterFilterSensitiveLog: (
  obj: TopicRelativeDateFilter
) => any;
export declare const TopicFilterFilterSensitiveLog: (obj: TopicFilter) => any;
export declare const DatasetMetadataFilterSensitiveLog: (
  obj: DatasetMetadata
) => any;
export declare const TopicDetailsFilterSensitiveLog: (obj: TopicDetails) => any;
export declare const CreateTopicRequestFilterSensitiveLog: (
  obj: CreateTopicRequest
) => any;
export declare const DashboardVersionFilterSensitiveLog: (
  obj: DashboardVersion
) => any;
export declare const DashboardFilterSensitiveLog: (obj: Dashboard) => any;
export declare const OutputColumnFilterSensitiveLog: (obj: OutputColumn) => any;
export declare const DataSetFilterSensitiveLog: (obj: DataSet) => any;
