import { ExceptionOptionType as __ExceptionOptionType } from "@smithy/smithy-client";
import {
  AggFunction,
  AggregationPartitionBy,
  AggType,
  AmazonElasticsearchParameters,
  AmazonOpenSearchParameters,
  AnalysisDefaults,
  AssetOptions,
  AxisDisplayOptions,
  CalculatedField,
  ChartAxisLabelOptions,
  ColumnConfiguration,
  DataLabelOptions,
  DataSetIdentifierDeclaration,
  DimensionField,
  FilterControl,
  FilterGroup,
  FontConfiguration,
  Layout,
  LegendOptions,
  MeasureField,
  NumberScale,
  ParameterControl,
  ParameterDeclaration,
  QueryExecutionOptions,
  ResourceStatus,
  SheetContentType,
  SheetControlLayout,
  SheetImage,
  SheetTextBox,
  TimeGranularity,
  TopicTimeGranularity,
  URLTargetConfiguration,
  Visibility,
  VisualCustomAction,
  VisualCustomActionDefaults,
  VisualInteractionOptions,
} from "./models_0";
import {
  BarChartVisual,
  BoxPlotVisual,
  ColorScale,
  ColumnHierarchy,
  ComboChartVisual,
  ConditionalFormattingColor,
  ConditionalFormattingIcon,
  CustomContentVisual,
  EmptyVisual,
  FieldSortOptions,
  FilledMapVisual,
  FunnelChartVisual,
  GaugeChartVisual,
  GeospatialMapVisual,
  HeatMapVisual,
  HistogramVisual,
  InsightVisual,
  ItemsLimitConfiguration,
  KPIVisual,
  LayerMapVisual,
  LineChartVisual,
  PaginationConfiguration,
  PieChartVisual,
  PivotTableConfiguration,
  RowAlternateColorOptions,
  TableCellStyle,
  TableTotalsPlacement,
  TableTotalsScrollStatus,
  TooltipOptions,
  TotalAggregationOption,
  UnaggregatedField,
  VisualPalette,
  VisualSubtitleLabelOptions,
  VisualTitleLabelOptions,
} from "./models_1";
import { QuickSightServiceException as __BaseException } from "./QuickSightServiceException";
export declare const PivotTableConditionalFormattingScopeRole: {
  readonly FIELD: "FIELD";
  readonly FIELD_TOTAL: "FIELD_TOTAL";
  readonly GRAND_TOTAL: "GRAND_TOTAL";
};
export type PivotTableConditionalFormattingScopeRole =
  (typeof PivotTableConditionalFormattingScopeRole)[keyof typeof PivotTableConditionalFormattingScopeRole];
export interface PivotTableConditionalFormattingScope {
  Role?: PivotTableConditionalFormattingScopeRole | undefined;
}
export interface TextConditionalFormat {
  BackgroundColor?: ConditionalFormattingColor | undefined;
  TextColor?: ConditionalFormattingColor | undefined;
  Icon?: ConditionalFormattingIcon | undefined;
}
export interface PivotTableCellConditionalFormatting {
  FieldId: string | undefined;
  TextFormat?: TextConditionalFormat | undefined;
  Scope?: PivotTableConditionalFormattingScope | undefined;
  Scopes?: PivotTableConditionalFormattingScope[] | undefined;
}
export interface PivotTableConditionalFormattingOption {
  Cell?: PivotTableCellConditionalFormatting | undefined;
}
export interface PivotTableConditionalFormatting {
  ConditionalFormattingOptions?:
    | PivotTableConditionalFormattingOption[]
    | undefined;
}
export interface PivotTableVisual {
  VisualId: string | undefined;
  Title?: VisualTitleLabelOptions | undefined;
  Subtitle?: VisualSubtitleLabelOptions | undefined;
  ChartConfiguration?: PivotTableConfiguration | undefined;
  ConditionalFormatting?: PivotTableConditionalFormatting | undefined;
  Actions?: VisualCustomAction[] | undefined;
  VisualContentAltText?: string | undefined;
}
export declare const PluginVisualAxisName: {
  readonly GROUP_BY: "GROUP_BY";
  readonly VALUE: "VALUE";
};
export type PluginVisualAxisName =
  (typeof PluginVisualAxisName)[keyof typeof PluginVisualAxisName];
export interface PluginVisualFieldWell {
  AxisName?: PluginVisualAxisName | undefined;
  Dimensions?: DimensionField[] | undefined;
  Measures?: MeasureField[] | undefined;
  Unaggregated?: UnaggregatedField[] | undefined;
}
export interface PluginVisualItemsLimitConfiguration {
  ItemsLimit?: number | undefined;
}
export interface PluginVisualTableQuerySort {
  RowSort?: FieldSortOptions[] | undefined;
  ItemsLimitConfiguration?: PluginVisualItemsLimitConfiguration | undefined;
}
export interface PluginVisualSortConfiguration {
  PluginVisualTableQuerySort?: PluginVisualTableQuerySort | undefined;
}
export interface PluginVisualProperty {
  Name?: string | undefined;
  Value?: string | undefined;
}
export interface PluginVisualOptions {
  VisualProperties?: PluginVisualProperty[] | undefined;
}
export interface PluginVisualConfiguration {
  FieldWells?: PluginVisualFieldWell[] | undefined;
  VisualOptions?: PluginVisualOptions | undefined;
  SortConfiguration?: PluginVisualSortConfiguration | undefined;
}
export interface PluginVisual {
  VisualId: string | undefined;
  PluginArn: string | undefined;
  Title?: VisualTitleLabelOptions | undefined;
  Subtitle?: VisualSubtitleLabelOptions | undefined;
  ChartConfiguration?: PluginVisualConfiguration | undefined;
  VisualContentAltText?: string | undefined;
}
export declare const RadarChartAxesRangeScale: {
  readonly AUTO: "AUTO";
  readonly INDEPENDENT: "INDEPENDENT";
  readonly SHARED: "SHARED";
};
export type RadarChartAxesRangeScale =
  (typeof RadarChartAxesRangeScale)[keyof typeof RadarChartAxesRangeScale];
export interface RadarChartAreaStyleSettings {
  Visibility?: Visibility | undefined;
}
export interface RadarChartSeriesSettings {
  AreaStyleSettings?: RadarChartAreaStyleSettings | undefined;
}
export interface RadarChartAggregatedFieldWells {
  Category?: DimensionField[] | undefined;
  Color?: DimensionField[] | undefined;
  Values?: MeasureField[] | undefined;
}
export interface RadarChartFieldWells {
  RadarChartAggregatedFieldWells?: RadarChartAggregatedFieldWells | undefined;
}
export declare const RadarChartShape: {
  readonly CIRCLE: "CIRCLE";
  readonly POLYGON: "POLYGON";
};
export type RadarChartShape =
  (typeof RadarChartShape)[keyof typeof RadarChartShape];
export interface RadarChartSortConfiguration {
  CategorySort?: FieldSortOptions[] | undefined;
  CategoryItemsLimit?: ItemsLimitConfiguration | undefined;
  ColorSort?: FieldSortOptions[] | undefined;
  ColorItemsLimit?: ItemsLimitConfiguration | undefined;
}
export interface RadarChartConfiguration {
  FieldWells?: RadarChartFieldWells | undefined;
  SortConfiguration?: RadarChartSortConfiguration | undefined;
  Shape?: RadarChartShape | undefined;
  BaseSeriesSettings?: RadarChartSeriesSettings | undefined;
  StartAngle?: number | undefined;
  VisualPalette?: VisualPalette | undefined;
  AlternateBandColorsVisibility?: Visibility | undefined;
  AlternateBandEvenColor?: string | undefined;
  AlternateBandOddColor?: string | undefined;
  CategoryAxis?: AxisDisplayOptions | undefined;
  CategoryLabelOptions?: ChartAxisLabelOptions | undefined;
  ColorAxis?: AxisDisplayOptions | undefined;
  ColorLabelOptions?: ChartAxisLabelOptions | undefined;
  Legend?: LegendOptions | undefined;
  AxesRangeScale?: RadarChartAxesRangeScale | undefined;
  Interactions?: VisualInteractionOptions | undefined;
}
export interface RadarChartVisual {
  VisualId: string | undefined;
  Title?: VisualTitleLabelOptions | undefined;
  Subtitle?: VisualSubtitleLabelOptions | undefined;
  ChartConfiguration?: RadarChartConfiguration | undefined;
  Actions?: VisualCustomAction[] | undefined;
  ColumnHierarchies?: ColumnHierarchy[] | undefined;
  VisualContentAltText?: string | undefined;
}
export interface SankeyDiagramAggregatedFieldWells {
  Source?: DimensionField[] | undefined;
  Destination?: DimensionField[] | undefined;
  Weight?: MeasureField[] | undefined;
}
export interface SankeyDiagramFieldWells {
  SankeyDiagramAggregatedFieldWells?:
    | SankeyDiagramAggregatedFieldWells
    | undefined;
}
export interface SankeyDiagramSortConfiguration {
  WeightSort?: FieldSortOptions[] | undefined;
  SourceItemsLimit?: ItemsLimitConfiguration | undefined;
  DestinationItemsLimit?: ItemsLimitConfiguration | undefined;
}
export interface SankeyDiagramChartConfiguration {
  FieldWells?: SankeyDiagramFieldWells | undefined;
  SortConfiguration?: SankeyDiagramSortConfiguration | undefined;
  DataLabels?: DataLabelOptions | undefined;
  Interactions?: VisualInteractionOptions | undefined;
}
export interface SankeyDiagramVisual {
  VisualId: string | undefined;
  Title?: VisualTitleLabelOptions | undefined;
  Subtitle?: VisualSubtitleLabelOptions | undefined;
  ChartConfiguration?: SankeyDiagramChartConfiguration | undefined;
  Actions?: VisualCustomAction[] | undefined;
  VisualContentAltText?: string | undefined;
}
export interface ScatterPlotCategoricallyAggregatedFieldWells {
  XAxis?: MeasureField[] | undefined;
  YAxis?: MeasureField[] | undefined;
  Category?: DimensionField[] | undefined;
  Size?: MeasureField[] | undefined;
  Label?: DimensionField[] | undefined;
}
export interface ScatterPlotUnaggregatedFieldWells {
  XAxis?: DimensionField[] | undefined;
  YAxis?: DimensionField[] | undefined;
  Size?: MeasureField[] | undefined;
  Category?: DimensionField[] | undefined;
  Label?: DimensionField[] | undefined;
}
export interface ScatterPlotFieldWells {
  ScatterPlotCategoricallyAggregatedFieldWells?:
    | ScatterPlotCategoricallyAggregatedFieldWells
    | undefined;
  ScatterPlotUnaggregatedFieldWells?:
    | ScatterPlotUnaggregatedFieldWells
    | undefined;
}
export interface ScatterPlotSortConfiguration {
  ScatterPlotLimitConfiguration?: ItemsLimitConfiguration | undefined;
}
export interface ScatterPlotConfiguration {
  FieldWells?: ScatterPlotFieldWells | undefined;
  SortConfiguration?: ScatterPlotSortConfiguration | undefined;
  XAxisLabelOptions?: ChartAxisLabelOptions | undefined;
  XAxisDisplayOptions?: AxisDisplayOptions | undefined;
  YAxisLabelOptions?: ChartAxisLabelOptions | undefined;
  YAxisDisplayOptions?: AxisDisplayOptions | undefined;
  Legend?: LegendOptions | undefined;
  DataLabels?: DataLabelOptions | undefined;
  Tooltip?: TooltipOptions | undefined;
  VisualPalette?: VisualPalette | undefined;
  Interactions?: VisualInteractionOptions | undefined;
}
export interface ScatterPlotVisual {
  VisualId: string | undefined;
  Title?: VisualTitleLabelOptions | undefined;
  Subtitle?: VisualSubtitleLabelOptions | undefined;
  ChartConfiguration?: ScatterPlotConfiguration | undefined;
  Actions?: VisualCustomAction[] | undefined;
  ColumnHierarchies?: ColumnHierarchy[] | undefined;
  VisualContentAltText?: string | undefined;
}
export interface TablePinnedFieldOptions {
  PinnedLeftFields?: string[] | undefined;
}
export declare const TableCellImageScalingConfiguration: {
  readonly DO_NOT_SCALE: "DO_NOT_SCALE";
  readonly FIT_TO_CELL_HEIGHT: "FIT_TO_CELL_HEIGHT";
  readonly FIT_TO_CELL_WIDTH: "FIT_TO_CELL_WIDTH";
};
export type TableCellImageScalingConfiguration =
  (typeof TableCellImageScalingConfiguration)[keyof typeof TableCellImageScalingConfiguration];
export interface TableCellImageSizingConfiguration {
  TableCellImageScalingConfiguration?:
    | TableCellImageScalingConfiguration
    | undefined;
}
export interface TableFieldImageConfiguration {
  SizingOptions?: TableCellImageSizingConfiguration | undefined;
}
export declare const TableFieldIconSetType: {
  readonly LINK: "LINK";
};
export type TableFieldIconSetType =
  (typeof TableFieldIconSetType)[keyof typeof TableFieldIconSetType];
export interface TableFieldCustomIconContent {
  Icon?: TableFieldIconSetType | undefined;
}
export interface TableFieldCustomTextContent {
  Value?: string | undefined;
  FontConfiguration: FontConfiguration | undefined;
}
export interface TableFieldLinkContentConfiguration {
  CustomTextContent?: TableFieldCustomTextContent | undefined;
  CustomIconContent?: TableFieldCustomIconContent | undefined;
}
export interface TableFieldLinkConfiguration {
  Target: URLTargetConfiguration | undefined;
  Content: TableFieldLinkContentConfiguration | undefined;
}
export interface TableFieldURLConfiguration {
  LinkConfiguration?: TableFieldLinkConfiguration | undefined;
  ImageConfiguration?: TableFieldImageConfiguration | undefined;
}
export interface TableFieldOption {
  FieldId: string | undefined;
  Width?: string | undefined;
  CustomLabel?: string | undefined;
  Visibility?: Visibility | undefined;
  URLStyling?: TableFieldURLConfiguration | undefined;
}
export declare const TransposedColumnType: {
  readonly ROW_HEADER_COLUMN: "ROW_HEADER_COLUMN";
  readonly VALUE_COLUMN: "VALUE_COLUMN";
};
export type TransposedColumnType =
  (typeof TransposedColumnType)[keyof typeof TransposedColumnType];
export interface TransposedTableOption {
  ColumnIndex?: number | undefined;
  ColumnWidth?: string | undefined;
  ColumnType: TransposedColumnType | undefined;
}
export interface TableFieldOptions {
  SelectedFieldOptions?: TableFieldOption[] | undefined;
  Order?: string[] | undefined;
  PinnedFieldOptions?: TablePinnedFieldOptions | undefined;
  TransposedTableOptions?: TransposedTableOption[] | undefined;
}
export interface TableAggregatedFieldWells {
  GroupBy?: DimensionField[] | undefined;
  Values?: MeasureField[] | undefined;
}
export interface TableUnaggregatedFieldWells {
  Values?: UnaggregatedField[] | undefined;
}
export interface TableFieldWells {
  TableAggregatedFieldWells?: TableAggregatedFieldWells | undefined;
  TableUnaggregatedFieldWells?: TableUnaggregatedFieldWells | undefined;
}
export interface TablePaginatedReportOptions {
  VerticalOverflowVisibility?: Visibility | undefined;
  OverflowColumnHeaderVisibility?: Visibility | undefined;
}
export interface TableSortConfiguration {
  RowSort?: FieldSortOptions[] | undefined;
  PaginationConfiguration?: PaginationConfiguration | undefined;
}
export interface DataBarsOptions {
  FieldId: string | undefined;
  PositiveColor?: string | undefined;
  NegativeColor?: string | undefined;
}
export interface TableInlineVisualization {
  DataBars?: DataBarsOptions | undefined;
}
export declare const TableOrientation: {
  readonly HORIZONTAL: "HORIZONTAL";
  readonly VERTICAL: "VERTICAL";
};
export type TableOrientation =
  (typeof TableOrientation)[keyof typeof TableOrientation];
export interface TableOptions {
  Orientation?: TableOrientation | undefined;
  HeaderStyle?: TableCellStyle | undefined;
  CellStyle?: TableCellStyle | undefined;
  RowAlternateColorOptions?: RowAlternateColorOptions | undefined;
}
export interface TotalOptions {
  TotalsVisibility?: Visibility | undefined;
  Placement?: TableTotalsPlacement | undefined;
  ScrollStatus?: TableTotalsScrollStatus | undefined;
  CustomLabel?: string | undefined;
  TotalCellStyle?: TableCellStyle | undefined;
  TotalAggregationOptions?: TotalAggregationOption[] | undefined;
}
export interface TableConfiguration {
  FieldWells?: TableFieldWells | undefined;
  SortConfiguration?: TableSortConfiguration | undefined;
  TableOptions?: TableOptions | undefined;
  TotalOptions?: TotalOptions | undefined;
  FieldOptions?: TableFieldOptions | undefined;
  PaginatedReportOptions?: TablePaginatedReportOptions | undefined;
  TableInlineVisualizations?: TableInlineVisualization[] | undefined;
  Interactions?: VisualInteractionOptions | undefined;
}
export interface TableCellConditionalFormatting {
  FieldId: string | undefined;
  TextFormat?: TextConditionalFormat | undefined;
}
export interface TableRowConditionalFormatting {
  BackgroundColor?: ConditionalFormattingColor | undefined;
  TextColor?: ConditionalFormattingColor | undefined;
}
export interface TableConditionalFormattingOption {
  Cell?: TableCellConditionalFormatting | undefined;
  Row?: TableRowConditionalFormatting | undefined;
}
export interface TableConditionalFormatting {
  ConditionalFormattingOptions?: TableConditionalFormattingOption[] | undefined;
}
export interface TableVisual {
  VisualId: string | undefined;
  Title?: VisualTitleLabelOptions | undefined;
  Subtitle?: VisualSubtitleLabelOptions | undefined;
  ChartConfiguration?: TableConfiguration | undefined;
  ConditionalFormatting?: TableConditionalFormatting | undefined;
  Actions?: VisualCustomAction[] | undefined;
  VisualContentAltText?: string | undefined;
}
export interface TreeMapAggregatedFieldWells {
  Groups?: DimensionField[] | undefined;
  Sizes?: MeasureField[] | undefined;
  Colors?: MeasureField[] | undefined;
}
export interface TreeMapFieldWells {
  TreeMapAggregatedFieldWells?: TreeMapAggregatedFieldWells | undefined;
}
export interface TreeMapSortConfiguration {
  TreeMapSort?: FieldSortOptions[] | undefined;
  TreeMapGroupItemsLimitConfiguration?: ItemsLimitConfiguration | undefined;
}
export interface TreeMapConfiguration {
  FieldWells?: TreeMapFieldWells | undefined;
  SortConfiguration?: TreeMapSortConfiguration | undefined;
  GroupLabelOptions?: ChartAxisLabelOptions | undefined;
  SizeLabelOptions?: ChartAxisLabelOptions | undefined;
  ColorLabelOptions?: ChartAxisLabelOptions | undefined;
  ColorScale?: ColorScale | undefined;
  Legend?: LegendOptions | undefined;
  DataLabels?: DataLabelOptions | undefined;
  Tooltip?: TooltipOptions | undefined;
  Interactions?: VisualInteractionOptions | undefined;
}
export interface TreeMapVisual {
  VisualId: string | undefined;
  Title?: VisualTitleLabelOptions | undefined;
  Subtitle?: VisualSubtitleLabelOptions | undefined;
  ChartConfiguration?: TreeMapConfiguration | undefined;
  Actions?: VisualCustomAction[] | undefined;
  ColumnHierarchies?: ColumnHierarchy[] | undefined;
  VisualContentAltText?: string | undefined;
}
export interface WaterfallChartGroupColorConfiguration {
  PositiveBarColor?: string | undefined;
  NegativeBarColor?: string | undefined;
  TotalBarColor?: string | undefined;
}
export interface WaterfallChartColorConfiguration {
  GroupColorConfiguration?: WaterfallChartGroupColorConfiguration | undefined;
}
export interface WaterfallChartAggregatedFieldWells {
  Categories?: DimensionField[] | undefined;
  Values?: MeasureField[] | undefined;
  Breakdowns?: DimensionField[] | undefined;
}
export interface WaterfallChartFieldWells {
  WaterfallChartAggregatedFieldWells?:
    | WaterfallChartAggregatedFieldWells
    | undefined;
}
export interface WaterfallChartSortConfiguration {
  CategorySort?: FieldSortOptions[] | undefined;
  BreakdownItemsLimit?: ItemsLimitConfiguration | undefined;
}
export interface WaterfallChartOptions {
  TotalBarLabel?: string | undefined;
}
export interface WaterfallChartConfiguration {
  FieldWells?: WaterfallChartFieldWells | undefined;
  SortConfiguration?: WaterfallChartSortConfiguration | undefined;
  WaterfallChartOptions?: WaterfallChartOptions | undefined;
  CategoryAxisLabelOptions?: ChartAxisLabelOptions | undefined;
  CategoryAxisDisplayOptions?: AxisDisplayOptions | undefined;
  PrimaryYAxisLabelOptions?: ChartAxisLabelOptions | undefined;
  PrimaryYAxisDisplayOptions?: AxisDisplayOptions | undefined;
  Legend?: LegendOptions | undefined;
  DataLabels?: DataLabelOptions | undefined;
  VisualPalette?: VisualPalette | undefined;
  ColorConfiguration?: WaterfallChartColorConfiguration | undefined;
  Interactions?: VisualInteractionOptions | undefined;
}
export interface WaterfallVisual {
  VisualId: string | undefined;
  Title?: VisualTitleLabelOptions | undefined;
  Subtitle?: VisualSubtitleLabelOptions | undefined;
  ChartConfiguration?: WaterfallChartConfiguration | undefined;
  Actions?: VisualCustomAction[] | undefined;
  ColumnHierarchies?: ColumnHierarchy[] | undefined;
  VisualContentAltText?: string | undefined;
}
export interface WordCloudAggregatedFieldWells {
  GroupBy?: DimensionField[] | undefined;
  Size?: MeasureField[] | undefined;
}
export interface WordCloudFieldWells {
  WordCloudAggregatedFieldWells?: WordCloudAggregatedFieldWells | undefined;
}
export interface WordCloudSortConfiguration {
  CategoryItemsLimit?: ItemsLimitConfiguration | undefined;
  CategorySort?: FieldSortOptions[] | undefined;
}
export declare const WordCloudCloudLayout: {
  readonly FLUID: "FLUID";
  readonly NORMAL: "NORMAL";
};
export type WordCloudCloudLayout =
  (typeof WordCloudCloudLayout)[keyof typeof WordCloudCloudLayout];
export declare const WordCloudWordCasing: {
  readonly EXISTING_CASE: "EXISTING_CASE";
  readonly LOWER_CASE: "LOWER_CASE";
};
export type WordCloudWordCasing =
  (typeof WordCloudWordCasing)[keyof typeof WordCloudWordCasing];
export declare const WordCloudWordOrientation: {
  readonly HORIZONTAL: "HORIZONTAL";
  readonly HORIZONTAL_AND_VERTICAL: "HORIZONTAL_AND_VERTICAL";
};
export type WordCloudWordOrientation =
  (typeof WordCloudWordOrientation)[keyof typeof WordCloudWordOrientation];
export declare const WordCloudWordPadding: {
  readonly LARGE: "LARGE";
  readonly MEDIUM: "MEDIUM";
  readonly NONE: "NONE";
  readonly SMALL: "SMALL";
};
export type WordCloudWordPadding =
  (typeof WordCloudWordPadding)[keyof typeof WordCloudWordPadding];
export declare const WordCloudWordScaling: {
  readonly EMPHASIZE: "EMPHASIZE";
  readonly NORMAL: "NORMAL";
};
export type WordCloudWordScaling =
  (typeof WordCloudWordScaling)[keyof typeof WordCloudWordScaling];
export interface WordCloudOptions {
  WordOrientation?: WordCloudWordOrientation | undefined;
  WordScaling?: WordCloudWordScaling | undefined;
  CloudLayout?: WordCloudCloudLayout | undefined;
  WordCasing?: WordCloudWordCasing | undefined;
  WordPadding?: WordCloudWordPadding | undefined;
  MaximumStringLength?: number | undefined;
}
export interface WordCloudChartConfiguration {
  FieldWells?: WordCloudFieldWells | undefined;
  SortConfiguration?: WordCloudSortConfiguration | undefined;
  CategoryLabelOptions?: ChartAxisLabelOptions | undefined;
  WordCloudOptions?: WordCloudOptions | undefined;
  Interactions?: VisualInteractionOptions | undefined;
}
export interface WordCloudVisual {
  VisualId: string | undefined;
  Title?: VisualTitleLabelOptions | undefined;
  Subtitle?: VisualSubtitleLabelOptions | undefined;
  ChartConfiguration?: WordCloudChartConfiguration | undefined;
  Actions?: VisualCustomAction[] | undefined;
  ColumnHierarchies?: ColumnHierarchy[] | undefined;
  VisualContentAltText?: string | undefined;
}
export interface Visual {
  TableVisual?: TableVisual | undefined;
  PivotTableVisual?: PivotTableVisual | undefined;
  BarChartVisual?: BarChartVisual | undefined;
  KPIVisual?: KPIVisual | undefined;
  PieChartVisual?: PieChartVisual | undefined;
  GaugeChartVisual?: GaugeChartVisual | undefined;
  LineChartVisual?: LineChartVisual | undefined;
  HeatMapVisual?: HeatMapVisual | undefined;
  TreeMapVisual?: TreeMapVisual | undefined;
  GeospatialMapVisual?: GeospatialMapVisual | undefined;
  FilledMapVisual?: FilledMapVisual | undefined;
  LayerMapVisual?: LayerMapVisual | undefined;
  FunnelChartVisual?: FunnelChartVisual | undefined;
  ScatterPlotVisual?: ScatterPlotVisual | undefined;
  ComboChartVisual?: ComboChartVisual | undefined;
  BoxPlotVisual?: BoxPlotVisual | undefined;
  WaterfallVisual?: WaterfallVisual | undefined;
  HistogramVisual?: HistogramVisual | undefined;
  WordCloudVisual?: WordCloudVisual | undefined;
  InsightVisual?: InsightVisual | undefined;
  SankeyDiagramVisual?: SankeyDiagramVisual | undefined;
  CustomContentVisual?: CustomContentVisual | undefined;
  EmptyVisual?: EmptyVisual | undefined;
  RadarChartVisual?: RadarChartVisual | undefined;
  PluginVisual?: PluginVisual | undefined;
}
export interface SheetDefinition {
  SheetId: string | undefined;
  Title?: string | undefined;
  Description?: string | undefined;
  Name?: string | undefined;
  ParameterControls?: ParameterControl[] | undefined;
  FilterControls?: FilterControl[] | undefined;
  Visuals?: Visual[] | undefined;
  TextBoxes?: SheetTextBox[] | undefined;
  Images?: SheetImage[] | undefined;
  Layouts?: Layout[] | undefined;
  SheetControlLayouts?: SheetControlLayout[] | undefined;
  ContentType?: SheetContentType | undefined;
  CustomActionDefaults?: VisualCustomActionDefaults | undefined;
}
export interface StaticFileS3SourceOptions {
  BucketName: string | undefined;
  ObjectKey: string | undefined;
  Region: string | undefined;
}
export interface StaticFileUrlSourceOptions {
  Url: string | undefined;
}
export interface StaticFileSource {
  UrlOptions?: StaticFileUrlSourceOptions | undefined;
  S3Options?: StaticFileS3SourceOptions | undefined;
}
export interface ImageStaticFile {
  StaticFileId: string | undefined;
  Source?: StaticFileSource | undefined;
}
export interface SpatialStaticFile {
  StaticFileId: string | undefined;
  Source?: StaticFileSource | undefined;
}
export interface StaticFile {
  ImageStaticFile?: ImageStaticFile | undefined;
  SpatialStaticFile?: SpatialStaticFile | undefined;
}
export interface AnalysisDefinition {
  DataSetIdentifierDeclarations: DataSetIdentifierDeclaration[] | undefined;
  Sheets?: SheetDefinition[] | undefined;
  CalculatedFields?: CalculatedField[] | undefined;
  ParameterDeclarations?: ParameterDeclaration[] | undefined;
  FilterGroups?: FilterGroup[] | undefined;
  ColumnConfigurations?: ColumnConfiguration[] | undefined;
  AnalysisDefaults?: AnalysisDefaults | undefined;
  Options?: AssetOptions | undefined;
  QueryExecutionOptions?: QueryExecutionOptions | undefined;
  StaticFiles?: StaticFile[] | undefined;
}
export declare const AnalysisFilterAttribute: {
  readonly ANALYSIS_NAME: "ANALYSIS_NAME";
  readonly DIRECT_QUICKSIGHT_OWNER: "DIRECT_QUICKSIGHT_OWNER";
  readonly DIRECT_QUICKSIGHT_SOLE_OWNER: "DIRECT_QUICKSIGHT_SOLE_OWNER";
  readonly DIRECT_QUICKSIGHT_VIEWER_OR_OWNER: "DIRECT_QUICKSIGHT_VIEWER_OR_OWNER";
  readonly QUICKSIGHT_OWNER: "QUICKSIGHT_OWNER";
  readonly QUICKSIGHT_USER: "QUICKSIGHT_USER";
  readonly QUICKSIGHT_VIEWER_OR_OWNER: "QUICKSIGHT_VIEWER_OR_OWNER";
};
export type AnalysisFilterAttribute =
  (typeof AnalysisFilterAttribute)[keyof typeof AnalysisFilterAttribute];
export declare const FilterOperator: {
  readonly StringEquals: "StringEquals";
  readonly StringLike: "StringLike";
};
export type FilterOperator =
  (typeof FilterOperator)[keyof typeof FilterOperator];
export interface AnalysisSearchFilter {
  Operator?: FilterOperator | undefined;
  Name?: AnalysisFilterAttribute | undefined;
  Value?: string | undefined;
}
export interface DataSetReference {
  DataSetPlaceholder: string | undefined;
  DataSetArn: string | undefined;
}
export interface AnalysisSourceTemplate {
  DataSetReferences: DataSetReference[] | undefined;
  Arn: string | undefined;
}
export interface AnalysisSourceEntity {
  SourceTemplate?: AnalysisSourceTemplate | undefined;
}
export interface AnalysisSummary {
  Arn?: string | undefined;
  AnalysisId?: string | undefined;
  Name?: string | undefined;
  Status?: ResourceStatus | undefined;
  CreatedTime?: Date | undefined;
  LastUpdatedTime?: Date | undefined;
}
export declare const AnchorType: {
  readonly TODAY: "TODAY";
};
export type AnchorType = (typeof AnchorType)[keyof typeof AnchorType];
export interface Anchor {
  AnchorType?: AnchorType | undefined;
  TimeGranularity?: TimeGranularity | undefined;
  Offset?: number | undefined;
}
export declare const AnonymousUserDashboardEmbeddingConfigurationDisabledFeature: {
  readonly SHARED_VIEW: "SHARED_VIEW";
};
export type AnonymousUserDashboardEmbeddingConfigurationDisabledFeature =
  (typeof AnonymousUserDashboardEmbeddingConfigurationDisabledFeature)[keyof typeof AnonymousUserDashboardEmbeddingConfigurationDisabledFeature];
export declare const AnonymousUserDashboardEmbeddingConfigurationEnabledFeature: {
  readonly SHARED_VIEW: "SHARED_VIEW";
};
export type AnonymousUserDashboardEmbeddingConfigurationEnabledFeature =
  (typeof AnonymousUserDashboardEmbeddingConfigurationEnabledFeature)[keyof typeof AnonymousUserDashboardEmbeddingConfigurationEnabledFeature];
export interface SharedViewConfigurations {
  Enabled: boolean | undefined;
}
export interface AnonymousUserDashboardFeatureConfigurations {
  SharedView?: SharedViewConfigurations | undefined;
}
export interface AnonymousUserDashboardEmbeddingConfiguration {
  InitialDashboardId: string | undefined;
  EnabledFeatures?:
    | AnonymousUserDashboardEmbeddingConfigurationEnabledFeature[]
    | undefined;
  DisabledFeatures?:
    | AnonymousUserDashboardEmbeddingConfigurationDisabledFeature[]
    | undefined;
  FeatureConfigurations?:
    | AnonymousUserDashboardFeatureConfigurations
    | undefined;
}
export interface DashboardVisualId {
  DashboardId: string | undefined;
  SheetId: string | undefined;
  VisualId: string | undefined;
}
export interface AnonymousUserDashboardVisualEmbeddingConfiguration {
  InitialDashboardVisualId: DashboardVisualId | undefined;
}
export interface AnonymousUserGenerativeQnAEmbeddingConfiguration {
  InitialTopicId: string | undefined;
}
export interface AnonymousUserQSearchBarEmbeddingConfiguration {
  InitialTopicId: string | undefined;
}
export interface AnonymousUserEmbeddingExperienceConfiguration {
  Dashboard?: AnonymousUserDashboardEmbeddingConfiguration | undefined;
  DashboardVisual?:
    | AnonymousUserDashboardVisualEmbeddingConfiguration
    | undefined;
  QSearchBar?: AnonymousUserQSearchBarEmbeddingConfiguration | undefined;
  GenerativeQnA?: AnonymousUserGenerativeQnAEmbeddingConfiguration | undefined;
}
export declare const SnapshotFileFormatType: {
  readonly CSV: "CSV";
  readonly EXCEL: "EXCEL";
  readonly PDF: "PDF";
};
export type SnapshotFileFormatType =
  (typeof SnapshotFileFormatType)[keyof typeof SnapshotFileFormatType];
export declare const SnapshotFileSheetSelectionScope: {
  readonly ALL_VISUALS: "ALL_VISUALS";
  readonly SELECTED_VISUALS: "SELECTED_VISUALS";
};
export type SnapshotFileSheetSelectionScope =
  (typeof SnapshotFileSheetSelectionScope)[keyof typeof SnapshotFileSheetSelectionScope];
export interface SnapshotFileSheetSelection {
  SheetId: string | undefined;
  SelectionScope: SnapshotFileSheetSelectionScope | undefined;
  VisualIds?: string[] | undefined;
}
export interface SnapshotFile {
  SheetSelections: SnapshotFileSheetSelection[] | undefined;
  FormatType: SnapshotFileFormatType | undefined;
}
export interface SnapshotJobResultErrorInfo {
  ErrorMessage?: string | undefined;
  ErrorType?: string | undefined;
}
export interface S3BucketConfiguration {
  BucketName: string | undefined;
  BucketPrefix: string | undefined;
  BucketRegion: string | undefined;
}
export interface SnapshotS3DestinationConfiguration {
  BucketConfiguration: S3BucketConfiguration | undefined;
}
export interface SnapshotJobS3Result {
  S3DestinationConfiguration?: SnapshotS3DestinationConfiguration | undefined;
  S3Uri?: string | undefined;
  ErrorInfo?: SnapshotJobResultErrorInfo[] | undefined;
}
export interface SnapshotJobResultFileGroup {
  Files?: SnapshotFile[] | undefined;
  S3Results?: SnapshotJobS3Result[] | undefined;
}
export interface AnonymousUserSnapshotJobResult {
  FileGroups?: SnapshotJobResultFileGroup[] | undefined;
}
export interface Palette {
  Foreground?: string | undefined;
  Background?: string | undefined;
}
export interface BrandColorPalette {
  Primary?: Palette | undefined;
  Secondary?: Palette | undefined;
  Accent?: Palette | undefined;
  Measure?: Palette | undefined;
  Dimension?: Palette | undefined;
  Success?: Palette | undefined;
  Info?: Palette | undefined;
  Warning?: Palette | undefined;
  Danger?: Palette | undefined;
}
export interface NavbarStyle {
  GlobalNavbar?: Palette | undefined;
  ContextualNavbar?: Palette | undefined;
}
export interface BrandElementStyle {
  NavbarStyle?: NavbarStyle | undefined;
}
export interface ApplicationTheme {
  BrandColorPalette?: BrandColorPalette | undefined;
  BrandElementStyle?: BrandElementStyle | undefined;
}
export declare const AssetBundleExportJobAnalysisPropertyToOverride: {
  readonly NAME: "Name";
};
export type AssetBundleExportJobAnalysisPropertyToOverride =
  (typeof AssetBundleExportJobAnalysisPropertyToOverride)[keyof typeof AssetBundleExportJobAnalysisPropertyToOverride];
export interface AssetBundleExportJobAnalysisOverrideProperties {
  Arn: string | undefined;
  Properties: AssetBundleExportJobAnalysisPropertyToOverride[] | undefined;
}
export declare const AssetBundleExportJobDashboardPropertyToOverride: {
  readonly NAME: "Name";
};
export type AssetBundleExportJobDashboardPropertyToOverride =
  (typeof AssetBundleExportJobDashboardPropertyToOverride)[keyof typeof AssetBundleExportJobDashboardPropertyToOverride];
export interface AssetBundleExportJobDashboardOverrideProperties {
  Arn: string | undefined;
  Properties: AssetBundleExportJobDashboardPropertyToOverride[] | undefined;
}
export declare const AssetBundleExportJobDataSetPropertyToOverride: {
  readonly NAME: "Name";
  readonly REFRESH_FAILURE_EMAIL_ALERT_STATUS: "RefreshFailureEmailAlertStatus";
};
export type AssetBundleExportJobDataSetPropertyToOverride =
  (typeof AssetBundleExportJobDataSetPropertyToOverride)[keyof typeof AssetBundleExportJobDataSetPropertyToOverride];
export interface AssetBundleExportJobDataSetOverrideProperties {
  Arn: string | undefined;
  Properties: AssetBundleExportJobDataSetPropertyToOverride[] | undefined;
}
export declare const AssetBundleExportJobDataSourcePropertyToOverride: {
  readonly CATALOG: "Catalog";
  readonly CLUSTER_ID: "ClusterId";
  readonly DATABASE: "Database";
  readonly DATA_SET_NAME: "DataSetName";
  readonly DISABLE_SSL: "DisableSsl";
  readonly DOMAIN: "Domain";
  readonly HOST: "Host";
  readonly INSTANCE_ID: "InstanceId";
  readonly MANIFEST_FILE_LOCATION: "ManifestFileLocation";
  readonly NAME: "Name";
  readonly PASSWORD: "Password";
  readonly PORT: "Port";
  readonly PRODUCT_TYPE: "ProductType";
  readonly ROLE_ARN: "RoleArn";
  readonly SECRET_ARN: "SecretArn";
  readonly USERNAME: "Username";
  readonly WAREHOUSE: "Warehouse";
  readonly WORK_GROUP: "WorkGroup";
};
export type AssetBundleExportJobDataSourcePropertyToOverride =
  (typeof AssetBundleExportJobDataSourcePropertyToOverride)[keyof typeof AssetBundleExportJobDataSourcePropertyToOverride];
export interface AssetBundleExportJobDataSourceOverrideProperties {
  Arn: string | undefined;
  Properties: AssetBundleExportJobDataSourcePropertyToOverride[] | undefined;
}
export declare const AssetBundleExportJobFolderPropertyToOverride: {
  readonly NAME: "Name";
  readonly PARENT_FOLDER_ARN: "ParentFolderArn";
};
export type AssetBundleExportJobFolderPropertyToOverride =
  (typeof AssetBundleExportJobFolderPropertyToOverride)[keyof typeof AssetBundleExportJobFolderPropertyToOverride];
export interface AssetBundleExportJobFolderOverrideProperties {
  Arn: string | undefined;
  Properties: AssetBundleExportJobFolderPropertyToOverride[] | undefined;
}
export declare const AssetBundleExportJobRefreshSchedulePropertyToOverride: {
  readonly START_AFTER_DATE_TIME: "StartAfterDateTime";
};
export type AssetBundleExportJobRefreshSchedulePropertyToOverride =
  (typeof AssetBundleExportJobRefreshSchedulePropertyToOverride)[keyof typeof AssetBundleExportJobRefreshSchedulePropertyToOverride];
export interface AssetBundleExportJobRefreshScheduleOverrideProperties {
  Arn: string | undefined;
  Properties:
    | AssetBundleExportJobRefreshSchedulePropertyToOverride[]
    | undefined;
}
export interface AssetBundleExportJobResourceIdOverrideConfiguration {
  PrefixForAllResources?: boolean | undefined;
}
export declare const AssetBundleExportJobThemePropertyToOverride: {
  readonly NAME: "Name";
};
export type AssetBundleExportJobThemePropertyToOverride =
  (typeof AssetBundleExportJobThemePropertyToOverride)[keyof typeof AssetBundleExportJobThemePropertyToOverride];
export interface AssetBundleExportJobThemeOverrideProperties {
  Arn: string | undefined;
  Properties: AssetBundleExportJobThemePropertyToOverride[] | undefined;
}
export declare const AssetBundleExportJobVPCConnectionPropertyToOverride: {
  readonly DNS_RESOLVERS: "DnsResolvers";
  readonly NAME: "Name";
  readonly ROLE_ARN: "RoleArn";
};
export type AssetBundleExportJobVPCConnectionPropertyToOverride =
  (typeof AssetBundleExportJobVPCConnectionPropertyToOverride)[keyof typeof AssetBundleExportJobVPCConnectionPropertyToOverride];
export interface AssetBundleExportJobVPCConnectionOverrideProperties {
  Arn: string | undefined;
  Properties: AssetBundleExportJobVPCConnectionPropertyToOverride[] | undefined;
}
export interface AssetBundleCloudFormationOverridePropertyConfiguration {
  ResourceIdOverrideConfiguration?:
    | AssetBundleExportJobResourceIdOverrideConfiguration
    | undefined;
  VPCConnections?:
    | AssetBundleExportJobVPCConnectionOverrideProperties[]
    | undefined;
  RefreshSchedules?:
    | AssetBundleExportJobRefreshScheduleOverrideProperties[]
    | undefined;
  DataSources?: AssetBundleExportJobDataSourceOverrideProperties[] | undefined;
  DataSets?: AssetBundleExportJobDataSetOverrideProperties[] | undefined;
  Themes?: AssetBundleExportJobThemeOverrideProperties[] | undefined;
  Analyses?: AssetBundleExportJobAnalysisOverrideProperties[] | undefined;
  Dashboards?: AssetBundleExportJobDashboardOverrideProperties[] | undefined;
  Folders?: AssetBundleExportJobFolderOverrideProperties[] | undefined;
}
export declare const AssetBundleExportFormat: {
  readonly CLOUDFORMATION_JSON: "CLOUDFORMATION_JSON";
  readonly QUICKSIGHT_JSON: "QUICKSIGHT_JSON";
};
export type AssetBundleExportFormat =
  (typeof AssetBundleExportFormat)[keyof typeof AssetBundleExportFormat];
export interface AssetBundleExportJobError {
  Arn?: string | undefined;
  Type?: string | undefined;
  Message?: string | undefined;
}
export declare const AssetBundleExportJobStatus: {
  readonly FAILED: "FAILED";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly QUEUED_FOR_IMMEDIATE_EXECUTION: "QUEUED_FOR_IMMEDIATE_EXECUTION";
  readonly SUCCESSFUL: "SUCCESSFUL";
};
export type AssetBundleExportJobStatus =
  (typeof AssetBundleExportJobStatus)[keyof typeof AssetBundleExportJobStatus];
export interface AssetBundleExportJobSummary {
  JobStatus?: AssetBundleExportJobStatus | undefined;
  Arn?: string | undefined;
  CreatedTime?: Date | undefined;
  AssetBundleExportJobId?: string | undefined;
  IncludeAllDependencies?: boolean | undefined;
  ExportFormat?: AssetBundleExportFormat | undefined;
  IncludePermissions?: boolean | undefined;
  IncludeTags?: boolean | undefined;
}
export interface AssetBundleExportJobValidationStrategy {
  StrictModeForAllResources?: boolean | undefined;
}
export interface AssetBundleExportJobWarning {
  Arn?: string | undefined;
  Message?: string | undefined;
}
export declare const AssetBundleImportFailureAction: {
  readonly DO_NOTHING: "DO_NOTHING";
  readonly ROLLBACK: "ROLLBACK";
};
export type AssetBundleImportFailureAction =
  (typeof AssetBundleImportFailureAction)[keyof typeof AssetBundleImportFailureAction];
export interface AssetBundleImportJobAnalysisOverrideParameters {
  AnalysisId: string | undefined;
  Name?: string | undefined;
}
export interface AssetBundleResourcePermissions {
  Principals: string[] | undefined;
  Actions: string[] | undefined;
}
export interface AssetBundleImportJobAnalysisOverridePermissions {
  AnalysisIds: string[] | undefined;
  Permissions: AssetBundleResourcePermissions | undefined;
}
export interface Tag {
  Key: string | undefined;
  Value: string | undefined;
}
export interface AssetBundleImportJobAnalysisOverrideTags {
  AnalysisIds: string[] | undefined;
  Tags: Tag[] | undefined;
}
export interface AssetBundleImportJobDashboardOverrideParameters {
  DashboardId: string | undefined;
  Name?: string | undefined;
}
export interface AssetBundleResourceLinkSharingConfiguration {
  Permissions?: AssetBundleResourcePermissions | undefined;
}
export interface AssetBundleImportJobDashboardOverridePermissions {
  DashboardIds: string[] | undefined;
  Permissions?: AssetBundleResourcePermissions | undefined;
  LinkSharingConfiguration?:
    | AssetBundleResourceLinkSharingConfiguration
    | undefined;
}
export interface AssetBundleImportJobDashboardOverrideTags {
  DashboardIds: string[] | undefined;
  Tags: Tag[] | undefined;
}
export declare const RefreshFailureAlertStatus: {
  readonly DISABLED: "DISABLED";
  readonly ENABLED: "ENABLED";
};
export type RefreshFailureAlertStatus =
  (typeof RefreshFailureAlertStatus)[keyof typeof RefreshFailureAlertStatus];
export interface RefreshFailureEmailAlert {
  AlertStatus?: RefreshFailureAlertStatus | undefined;
}
export interface RefreshFailureConfiguration {
  EmailAlert?: RefreshFailureEmailAlert | undefined;
}
export declare const LookbackWindowSizeUnit: {
  readonly DAY: "DAY";
  readonly HOUR: "HOUR";
  readonly WEEK: "WEEK";
};
export type LookbackWindowSizeUnit =
  (typeof LookbackWindowSizeUnit)[keyof typeof LookbackWindowSizeUnit];
export interface LookbackWindow {
  ColumnName: string | undefined;
  Size: number | undefined;
  SizeUnit: LookbackWindowSizeUnit | undefined;
}
export interface IncrementalRefresh {
  LookbackWindow: LookbackWindow | undefined;
}
export interface RefreshConfiguration {
  IncrementalRefresh: IncrementalRefresh | undefined;
}
export interface DataSetRefreshProperties {
  RefreshConfiguration?: RefreshConfiguration | undefined;
  FailureConfiguration?: RefreshFailureConfiguration | undefined;
}
export interface AssetBundleImportJobDataSetOverrideParameters {
  DataSetId: string | undefined;
  Name?: string | undefined;
  DataSetRefreshProperties?: DataSetRefreshProperties | undefined;
}
export interface AssetBundleImportJobDataSetOverridePermissions {
  DataSetIds: string[] | undefined;
  Permissions: AssetBundleResourcePermissions | undefined;
}
export interface AssetBundleImportJobDataSetOverrideTags {
  DataSetIds: string[] | undefined;
  Tags: Tag[] | undefined;
}
export interface AssetBundleImportJobDataSourceCredentialPair {
  Username: string | undefined;
  Password: string | undefined;
}
export interface AssetBundleImportJobDataSourceCredentials {
  CredentialPair?: AssetBundleImportJobDataSourceCredentialPair | undefined;
  SecretArn?: string | undefined;
}
export interface AthenaParameters {
  WorkGroup?: string | undefined;
  RoleArn?: string | undefined;
}
export interface AuroraParameters {
  Host: string | undefined;
  Port: number | undefined;
  Database: string | undefined;
}
export interface AuroraPostgreSqlParameters {
  Host: string | undefined;
  Port: number | undefined;
  Database: string | undefined;
}
export interface AwsIotAnalyticsParameters {
  DataSetName: string | undefined;
}
export interface BigQueryParameters {
  ProjectId: string | undefined;
  DataSetRegion?: string | undefined;
}
export interface DatabricksParameters {
  Host: string | undefined;
  Port: number | undefined;
  SqlEndpointPath: string | undefined;
}
export interface ExasolParameters {
  Host: string | undefined;
  Port: number | undefined;
}
export interface JiraParameters {
  SiteBaseUrl: string | undefined;
}
export interface MariaDbParameters {
  Host: string | undefined;
  Port: number | undefined;
  Database: string | undefined;
}
export interface MySqlParameters {
  Host: string | undefined;
  Port: number | undefined;
  Database: string | undefined;
}
export interface OracleParameters {
  Host: string | undefined;
  Port: number | undefined;
  Database: string | undefined;
  UseServiceName?: boolean | undefined;
}
export interface PostgreSqlParameters {
  Host: string | undefined;
  Port: number | undefined;
  Database: string | undefined;
}
export interface PrestoParameters {
  Host: string | undefined;
  Port: number | undefined;
  Catalog: string | undefined;
}
export interface RdsParameters {
  InstanceId: string | undefined;
  Database: string | undefined;
}
export interface RedshiftIAMParameters {
  RoleArn: string | undefined;
  DatabaseUser?: string | undefined;
  DatabaseGroups?: string[] | undefined;
  AutoCreateDatabaseUser?: boolean | undefined;
}
export interface IdentityCenterConfiguration {
  EnableIdentityPropagation?: boolean | undefined;
}
export interface RedshiftParameters {
  Host?: string | undefined;
  Port?: number | undefined;
  Database: string | undefined;
  ClusterId?: string | undefined;
  IAMParameters?: RedshiftIAMParameters | undefined;
  IdentityCenterConfiguration?: IdentityCenterConfiguration | undefined;
}
export interface ManifestFileLocation {
  Bucket: string | undefined;
  Key: string | undefined;
}
export interface S3Parameters {
  ManifestFileLocation: ManifestFileLocation | undefined;
  RoleArn?: string | undefined;
}
export interface ServiceNowParameters {
  SiteBaseUrl: string | undefined;
}
export declare const AuthenticationType: {
  readonly PASSWORD: "PASSWORD";
  readonly TOKEN: "TOKEN";
  readonly X509: "X509";
};
export type AuthenticationType =
  (typeof AuthenticationType)[keyof typeof AuthenticationType];
export interface VpcConnectionProperties {
  VpcConnectionArn: string | undefined;
}
export interface OAuthParameters {
  TokenProviderUrl: string | undefined;
  OAuthScope?: string | undefined;
  IdentityProviderVpcConnectionProperties?: VpcConnectionProperties | undefined;
  IdentityProviderResourceUri?: string | undefined;
}
export interface SnowflakeParameters {
  Host: string | undefined;
  Database: string | undefined;
  Warehouse: string | undefined;
  AuthenticationType?: AuthenticationType | undefined;
  DatabaseAccessControlRole?: string | undefined;
  OAuthParameters?: OAuthParameters | undefined;
}
export interface SparkParameters {
  Host: string | undefined;
  Port: number | undefined;
}
export interface SqlServerParameters {
  Host: string | undefined;
  Port: number | undefined;
  Database: string | undefined;
}
export declare const StarburstProductType: {
  readonly ENTERPRISE: "ENTERPRISE";
  readonly GALAXY: "GALAXY";
};
export type StarburstProductType =
  (typeof StarburstProductType)[keyof typeof StarburstProductType];
export interface StarburstParameters {
  Host: string | undefined;
  Port: number | undefined;
  Catalog: string | undefined;
  ProductType?: StarburstProductType | undefined;
  DatabaseAccessControlRole?: string | undefined;
  AuthenticationType?: AuthenticationType | undefined;
  OAuthParameters?: OAuthParameters | undefined;
}
export interface TeradataParameters {
  Host: string | undefined;
  Port: number | undefined;
  Database: string | undefined;
}
export interface TrinoParameters {
  Host: string | undefined;
  Port: number | undefined;
  Catalog: string | undefined;
}
export interface TwitterParameters {
  Query: string | undefined;
  MaxRows: number | undefined;
}
export type DataSourceParameters =
  | DataSourceParameters.AmazonElasticsearchParametersMember
  | DataSourceParameters.AmazonOpenSearchParametersMember
  | DataSourceParameters.AthenaParametersMember
  | DataSourceParameters.AuroraParametersMember
  | DataSourceParameters.AuroraPostgreSqlParametersMember
  | DataSourceParameters.AwsIotAnalyticsParametersMember
  | DataSourceParameters.BigQueryParametersMember
  | DataSourceParameters.DatabricksParametersMember
  | DataSourceParameters.ExasolParametersMember
  | DataSourceParameters.JiraParametersMember
  | DataSourceParameters.MariaDbParametersMember
  | DataSourceParameters.MySqlParametersMember
  | DataSourceParameters.OracleParametersMember
  | DataSourceParameters.PostgreSqlParametersMember
  | DataSourceParameters.PrestoParametersMember
  | DataSourceParameters.RdsParametersMember
  | DataSourceParameters.RedshiftParametersMember
  | DataSourceParameters.S3ParametersMember
  | DataSourceParameters.ServiceNowParametersMember
  | DataSourceParameters.SnowflakeParametersMember
  | DataSourceParameters.SparkParametersMember
  | DataSourceParameters.SqlServerParametersMember
  | DataSourceParameters.StarburstParametersMember
  | DataSourceParameters.TeradataParametersMember
  | DataSourceParameters.TrinoParametersMember
  | DataSourceParameters.TwitterParametersMember
  | DataSourceParameters.$UnknownMember;
export declare namespace DataSourceParameters {
  interface AmazonElasticsearchParametersMember {
    AmazonElasticsearchParameters: AmazonElasticsearchParameters;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface AthenaParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters: AthenaParameters;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface AuroraParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters: AuroraParameters;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface AuroraPostgreSqlParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters: AuroraPostgreSqlParameters;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface AwsIotAnalyticsParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters: AwsIotAnalyticsParameters;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface JiraParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters: JiraParameters;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface MariaDbParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters: MariaDbParameters;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface MySqlParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters: MySqlParameters;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface OracleParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters: OracleParameters;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface PostgreSqlParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters: PostgreSqlParameters;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface PrestoParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters: PrestoParameters;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface RdsParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters: RdsParameters;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface RedshiftParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters: RedshiftParameters;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface S3ParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters: S3Parameters;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface ServiceNowParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters: ServiceNowParameters;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface SnowflakeParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters: SnowflakeParameters;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface SparkParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters: SparkParameters;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface SqlServerParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters: SqlServerParameters;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface TeradataParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters: TeradataParameters;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface TwitterParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters: TwitterParameters;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface AmazonOpenSearchParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters: AmazonOpenSearchParameters;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface ExasolParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters: ExasolParameters;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface DatabricksParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters: DatabricksParameters;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface StarburstParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters: StarburstParameters;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface TrinoParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters: TrinoParameters;
    BigQueryParameters?: never;
    $unknown?: never;
  }
  interface BigQueryParametersMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters: BigQueryParameters;
    $unknown?: never;
  }
  interface $UnknownMember {
    AmazonElasticsearchParameters?: never;
    AthenaParameters?: never;
    AuroraParameters?: never;
    AuroraPostgreSqlParameters?: never;
    AwsIotAnalyticsParameters?: never;
    JiraParameters?: never;
    MariaDbParameters?: never;
    MySqlParameters?: never;
    OracleParameters?: never;
    PostgreSqlParameters?: never;
    PrestoParameters?: never;
    RdsParameters?: never;
    RedshiftParameters?: never;
    S3Parameters?: never;
    ServiceNowParameters?: never;
    SnowflakeParameters?: never;
    SparkParameters?: never;
    SqlServerParameters?: never;
    TeradataParameters?: never;
    TwitterParameters?: never;
    AmazonOpenSearchParameters?: never;
    ExasolParameters?: never;
    DatabricksParameters?: never;
    StarburstParameters?: never;
    TrinoParameters?: never;
    BigQueryParameters?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    AmazonElasticsearchParameters: (value: AmazonElasticsearchParameters) => T;
    AthenaParameters: (value: AthenaParameters) => T;
    AuroraParameters: (value: AuroraParameters) => T;
    AuroraPostgreSqlParameters: (value: AuroraPostgreSqlParameters) => T;
    AwsIotAnalyticsParameters: (value: AwsIotAnalyticsParameters) => T;
    JiraParameters: (value: JiraParameters) => T;
    MariaDbParameters: (value: MariaDbParameters) => T;
    MySqlParameters: (value: MySqlParameters) => T;
    OracleParameters: (value: OracleParameters) => T;
    PostgreSqlParameters: (value: PostgreSqlParameters) => T;
    PrestoParameters: (value: PrestoParameters) => T;
    RdsParameters: (value: RdsParameters) => T;
    RedshiftParameters: (value: RedshiftParameters) => T;
    S3Parameters: (value: S3Parameters) => T;
    ServiceNowParameters: (value: ServiceNowParameters) => T;
    SnowflakeParameters: (value: SnowflakeParameters) => T;
    SparkParameters: (value: SparkParameters) => T;
    SqlServerParameters: (value: SqlServerParameters) => T;
    TeradataParameters: (value: TeradataParameters) => T;
    TwitterParameters: (value: TwitterParameters) => T;
    AmazonOpenSearchParameters: (value: AmazonOpenSearchParameters) => T;
    ExasolParameters: (value: ExasolParameters) => T;
    DatabricksParameters: (value: DatabricksParameters) => T;
    StarburstParameters: (value: StarburstParameters) => T;
    TrinoParameters: (value: TrinoParameters) => T;
    BigQueryParameters: (value: BigQueryParameters) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: DataSourceParameters, visitor: Visitor<T>) => T;
}
export interface SslProperties {
  DisableSsl?: boolean | undefined;
}
export interface AssetBundleImportJobDataSourceOverrideParameters {
  DataSourceId: string | undefined;
  Name?: string | undefined;
  DataSourceParameters?: DataSourceParameters | undefined;
  VpcConnectionProperties?: VpcConnectionProperties | undefined;
  SslProperties?: SslProperties | undefined;
  Credentials?: AssetBundleImportJobDataSourceCredentials | undefined;
}
export interface AssetBundleImportJobDataSourceOverridePermissions {
  DataSourceIds: string[] | undefined;
  Permissions: AssetBundleResourcePermissions | undefined;
}
export interface AssetBundleImportJobDataSourceOverrideTags {
  DataSourceIds: string[] | undefined;
  Tags: Tag[] | undefined;
}
export interface AssetBundleImportJobError {
  Arn?: string | undefined;
  Type?: string | undefined;
  Message?: string | undefined;
}
export interface AssetBundleImportJobFolderOverrideParameters {
  FolderId: string | undefined;
  Name?: string | undefined;
  ParentFolderArn?: string | undefined;
}
export interface AssetBundleImportJobFolderOverridePermissions {
  FolderIds: string[] | undefined;
  Permissions?: AssetBundleResourcePermissions | undefined;
}
export interface AssetBundleImportJobFolderOverrideTags {
  FolderIds: string[] | undefined;
  Tags: Tag[] | undefined;
}
export interface AssetBundleImportJobRefreshScheduleOverrideParameters {
  DataSetId: string | undefined;
  ScheduleId: string | undefined;
  StartAfterDateTime?: Date | undefined;
}
export interface AssetBundleImportJobResourceIdOverrideConfiguration {
  PrefixForAllResources?: string | undefined;
}
export interface AssetBundleImportJobThemeOverrideParameters {
  ThemeId: string | undefined;
  Name?: string | undefined;
}
export interface AssetBundleImportJobVPCConnectionOverrideParameters {
  VPCConnectionId: string | undefined;
  Name?: string | undefined;
  SubnetIds?: string[] | undefined;
  SecurityGroupIds?: string[] | undefined;
  DnsResolvers?: string[] | undefined;
  RoleArn?: string | undefined;
}
export interface AssetBundleImportJobOverrideParameters {
  ResourceIdOverrideConfiguration?:
    | AssetBundleImportJobResourceIdOverrideConfiguration
    | undefined;
  VPCConnections?:
    | AssetBundleImportJobVPCConnectionOverrideParameters[]
    | undefined;
  RefreshSchedules?:
    | AssetBundleImportJobRefreshScheduleOverrideParameters[]
    | undefined;
  DataSources?: AssetBundleImportJobDataSourceOverrideParameters[] | undefined;
  DataSets?: AssetBundleImportJobDataSetOverrideParameters[] | undefined;
  Themes?: AssetBundleImportJobThemeOverrideParameters[] | undefined;
  Analyses?: AssetBundleImportJobAnalysisOverrideParameters[] | undefined;
  Dashboards?: AssetBundleImportJobDashboardOverrideParameters[] | undefined;
  Folders?: AssetBundleImportJobFolderOverrideParameters[] | undefined;
}
export interface AssetBundleImportJobThemeOverridePermissions {
  ThemeIds: string[] | undefined;
  Permissions: AssetBundleResourcePermissions | undefined;
}
export interface AssetBundleImportJobOverridePermissions {
  DataSources?: AssetBundleImportJobDataSourceOverridePermissions[] | undefined;
  DataSets?: AssetBundleImportJobDataSetOverridePermissions[] | undefined;
  Themes?: AssetBundleImportJobThemeOverridePermissions[] | undefined;
  Analyses?: AssetBundleImportJobAnalysisOverridePermissions[] | undefined;
  Dashboards?: AssetBundleImportJobDashboardOverridePermissions[] | undefined;
  Folders?: AssetBundleImportJobFolderOverridePermissions[] | undefined;
}
export interface AssetBundleImportJobThemeOverrideTags {
  ThemeIds: string[] | undefined;
  Tags: Tag[] | undefined;
}
export interface AssetBundleImportJobVPCConnectionOverrideTags {
  VPCConnectionIds: string[] | undefined;
  Tags: Tag[] | undefined;
}
export interface AssetBundleImportJobOverrideTags {
  VPCConnections?: AssetBundleImportJobVPCConnectionOverrideTags[] | undefined;
  DataSources?: AssetBundleImportJobDataSourceOverrideTags[] | undefined;
  DataSets?: AssetBundleImportJobDataSetOverrideTags[] | undefined;
  Themes?: AssetBundleImportJobThemeOverrideTags[] | undefined;
  Analyses?: AssetBundleImportJobAnalysisOverrideTags[] | undefined;
  Dashboards?: AssetBundleImportJobDashboardOverrideTags[] | undefined;
  Folders?: AssetBundleImportJobFolderOverrideTags[] | undefined;
}
export interface AssetBundleImportJobOverrideValidationStrategy {
  StrictModeForAllResources?: boolean | undefined;
}
export declare const AssetBundleImportJobStatus: {
  readonly FAILED: "FAILED";
  readonly FAILED_ROLLBACK_COMPLETED: "FAILED_ROLLBACK_COMPLETED";
  readonly FAILED_ROLLBACK_ERROR: "FAILED_ROLLBACK_ERROR";
  readonly FAILED_ROLLBACK_IN_PROGRESS: "FAILED_ROLLBACK_IN_PROGRESS";
  readonly IN_PROGRESS: "IN_PROGRESS";
  readonly QUEUED_FOR_IMMEDIATE_EXECUTION: "QUEUED_FOR_IMMEDIATE_EXECUTION";
  readonly SUCCESSFUL: "SUCCESSFUL";
};
export type AssetBundleImportJobStatus =
  (typeof AssetBundleImportJobStatus)[keyof typeof AssetBundleImportJobStatus];
export interface AssetBundleImportJobSummary {
  JobStatus?: AssetBundleImportJobStatus | undefined;
  Arn?: string | undefined;
  CreatedTime?: Date | undefined;
  AssetBundleImportJobId?: string | undefined;
  FailureAction?: AssetBundleImportFailureAction | undefined;
}
export interface AssetBundleImportJobWarning {
  Arn?: string | undefined;
  Message?: string | undefined;
}
export interface AssetBundleImportSource {
  Body?: Uint8Array | undefined;
  S3Uri?: string | undefined;
}
export interface AssetBundleImportSourceDescription {
  Body?: string | undefined;
  S3Uri?: string | undefined;
}
export declare const AssignmentStatus: {
  readonly DISABLED: "DISABLED";
  readonly DRAFT: "DRAFT";
  readonly ENABLED: "ENABLED";
};
export type AssignmentStatus =
  (typeof AssignmentStatus)[keyof typeof AssignmentStatus];
export declare const AuthenticationMethodOption: {
  readonly ACTIVE_DIRECTORY: "ACTIVE_DIRECTORY";
  readonly IAM_AND_QUICKSIGHT: "IAM_AND_QUICKSIGHT";
  readonly IAM_IDENTITY_CENTER: "IAM_IDENTITY_CENTER";
  readonly IAM_ONLY: "IAM_ONLY";
};
export type AuthenticationMethodOption =
  (typeof AuthenticationMethodOption)[keyof typeof AuthenticationMethodOption];
export declare const ServiceType: {
  readonly QBUSINESS: "QBUSINESS";
  readonly REDSHIFT: "REDSHIFT";
};
export type ServiceType = (typeof ServiceType)[keyof typeof ServiceType];
export interface AuthorizedTargetsByService {
  Service?: ServiceType | undefined;
  AuthorizedTargets?: string[] | undefined;
}
export declare const AuthorSpecifiedAggregation: {
  readonly AVERAGE: "AVERAGE";
  readonly COUNT: "COUNT";
  readonly DISTINCT_COUNT: "DISTINCT_COUNT";
  readonly MAX: "MAX";
  readonly MEDIAN: "MEDIAN";
  readonly MIN: "MIN";
  readonly PERCENTILE: "PERCENTILE";
  readonly STDEV: "STDEV";
  readonly STDEVP: "STDEVP";
  readonly SUM: "SUM";
  readonly VAR: "VAR";
  readonly VARP: "VARP";
};
export type AuthorSpecifiedAggregation =
  (typeof AuthorSpecifiedAggregation)[keyof typeof AuthorSpecifiedAggregation];
export declare const ContributionAnalysisDirection: {
  readonly DECREASE: "DECREASE";
  readonly INCREASE: "INCREASE";
  readonly NEUTRAL: "NEUTRAL";
};
export type ContributionAnalysisDirection =
  (typeof ContributionAnalysisDirection)[keyof typeof ContributionAnalysisDirection];
export interface ContributionAnalysisFactor {
  FieldName?: string | undefined;
}
export declare const ContributionAnalysisSortType: {
  readonly ABSOLUTE_DIFFERENCE: "ABSOLUTE_DIFFERENCE";
  readonly CONTRIBUTION_PERCENTAGE: "CONTRIBUTION_PERCENTAGE";
  readonly DEVIATION_FROM_EXPECTED: "DEVIATION_FROM_EXPECTED";
  readonly PERCENTAGE_DIFFERENCE: "PERCENTAGE_DIFFERENCE";
};
export type ContributionAnalysisSortType =
  (typeof ContributionAnalysisSortType)[keyof typeof ContributionAnalysisSortType];
export interface Identifier {
  Identity: string | undefined;
}
export declare const TopicSortDirection: {
  readonly ASCENDING: "ASCENDING";
  readonly DESCENDING: "DESCENDING";
};
export type TopicSortDirection =
  (typeof TopicSortDirection)[keyof typeof TopicSortDirection];
export interface FilterAggMetrics {
  MetricOperand?: Identifier | undefined;
  Function?: AggType | undefined;
  SortDirection?: TopicSortDirection | undefined;
}
export declare const ConstantType: {
  readonly COLLECTIVE: "COLLECTIVE";
  readonly RANGE: "RANGE";
  readonly SINGULAR: "SINGULAR";
};
export type ConstantType = (typeof ConstantType)[keyof typeof ConstantType];
export interface CollectiveConstantEntry {
  ConstantType?: ConstantType | undefined;
  Value?: string | undefined;
}
export interface TopicConstantValue {
  ConstantType?: ConstantType | undefined;
  Value?: string | undefined;
  Minimum?: string | undefined;
  Maximum?: string | undefined;
  ValueList?: CollectiveConstantEntry[] | undefined;
}
export declare const FilterClass: {
  readonly CONDITIONAL_VALUE_FILTER: "CONDITIONAL_VALUE_FILTER";
  readonly ENFORCED_VALUE_FILTER: "ENFORCED_VALUE_FILTER";
  readonly NAMED_VALUE_FILTER: "NAMED_VALUE_FILTER";
};
export type FilterClass = (typeof FilterClass)[keyof typeof FilterClass];
export declare const TopicIRFilterType: {
  readonly ACCEPT_ALL_FILTER: "ACCEPT_ALL_FILTER";
  readonly CATEGORY_FILTER: "CATEGORY_FILTER";
  readonly DATE_RANGE_FILTER: "DATE_RANGE_FILTER";
  readonly EQUALS: "EQUALS";
  readonly NUMERIC_EQUALITY_FILTER: "NUMERIC_EQUALITY_FILTER";
  readonly NUMERIC_RANGE_FILTER: "NUMERIC_RANGE_FILTER";
  readonly RANK_LIMIT_FILTER: "RANK_LIMIT_FILTER";
  readonly RELATIVE_DATE_FILTER: "RELATIVE_DATE_FILTER";
  readonly TOP_BOTTOM_FILTER: "TOP_BOTTOM_FILTER";
};
export type TopicIRFilterType =
  (typeof TopicIRFilterType)[keyof typeof TopicIRFilterType];
export declare const TopicIRFilterFunction: {
  readonly CONTAINS: "CONTAINS";
  readonly CONTAINS_STRING: "CONTAINS_STRING";
  readonly ENDS_WITH: "ENDS_WITH";
  readonly EXACT: "EXACT";
  readonly LAST: "LAST";
  readonly NEXT: "NEXT";
  readonly NOW: "NOW";
  readonly PREVIOUS: "PREVIOUS";
  readonly STARTS_WITH: "STARTS_WITH";
  readonly THIS: "THIS";
};
export type TopicIRFilterFunction =
  (typeof TopicIRFilterFunction)[keyof typeof TopicIRFilterFunction];
export declare const NullFilterOption: {
  readonly ALL_VALUES: "ALL_VALUES";
  readonly NON_NULLS_ONLY: "NON_NULLS_ONLY";
  readonly NULLS_ONLY: "NULLS_ONLY";
};
export type NullFilterOption =
  (typeof NullFilterOption)[keyof typeof NullFilterOption];
export interface TopicIRFilterOption {
  FilterType?: TopicIRFilterType | undefined;
  FilterClass?: FilterClass | undefined;
  OperandField?: Identifier | undefined;
  Function?: TopicIRFilterFunction | undefined;
  Constant?: TopicConstantValue | undefined;
  Inverse?: boolean | undefined;
  NullFilter?: NullFilterOption | undefined;
  Aggregation?: AggType | undefined;
  AggregationFunctionParameters?: Record<string, string> | undefined;
  AggregationPartitionBy?: AggregationPartitionBy[] | undefined;
  Range?: TopicConstantValue | undefined;
  Inclusive?: boolean | undefined;
  TimeGranularity?: TimeGranularity | undefined;
  LastNextOffset?: TopicConstantValue | undefined;
  AggMetrics?: FilterAggMetrics[] | undefined;
  TopBottomLimit?: TopicConstantValue | undefined;
  SortDirection?: TopicSortDirection | undefined;
  Anchor?: Anchor | undefined;
}
export interface ContributionAnalysisTimeRanges {
  StartRange?: TopicIRFilterOption | undefined;
  EndRange?: TopicIRFilterOption | undefined;
}
export interface TopicIRContributionAnalysis {
  Factors?: ContributionAnalysisFactor[] | undefined;
  TimeRanges?: ContributionAnalysisTimeRanges | undefined;
  Direction?: ContributionAnalysisDirection | undefined;
  SortType?: ContributionAnalysisSortType | undefined;
}
export declare const DisplayFormat: {
  readonly AUTO: "AUTO";
  readonly CURRENCY: "CURRENCY";
  readonly DATE: "DATE";
  readonly NUMBER: "NUMBER";
  readonly PERCENT: "PERCENT";
  readonly STRING: "STRING";
};
export type DisplayFormat = (typeof DisplayFormat)[keyof typeof DisplayFormat];
export declare const TopicNumericSeparatorSymbol: {
  readonly COMMA: "COMMA";
  readonly DOT: "DOT";
};
export type TopicNumericSeparatorSymbol =
  (typeof TopicNumericSeparatorSymbol)[keyof typeof TopicNumericSeparatorSymbol];
export interface NegativeFormat {
  Prefix?: string | undefined;
  Suffix?: string | undefined;
}
export interface DisplayFormatOptions {
  UseBlankCellFormat?: boolean | undefined;
  BlankCellFormat?: string | undefined;
  DateFormat?: string | undefined;
  DecimalSeparator?: TopicNumericSeparatorSymbol | undefined;
  GroupingSeparator?: string | undefined;
  UseGrouping?: boolean | undefined;
  FractionDigits?: number | undefined;
  Prefix?: string | undefined;
  Suffix?: string | undefined;
  UnitScaler?: NumberScale | undefined;
  NegativeFormat?: NegativeFormat | undefined;
  CurrencySymbol?: string | undefined;
}
export interface NamedEntityRef {
  NamedEntityName?: string | undefined;
}
export interface TopicSortClause {
  Operand?: Identifier | undefined;
  SortDirection?: TopicSortDirection | undefined;
}
export interface TopicIRGroupBy {
  FieldName?: Identifier | undefined;
  TimeGranularity?: TopicTimeGranularity | undefined;
  Sort?: TopicSortClause | undefined;
  DisplayFormat?: DisplayFormat | undefined;
  DisplayFormatOptions?: DisplayFormatOptions | undefined;
  NamedEntity?: NamedEntityRef | undefined;
}
export declare const ComparisonMethodType: {
  readonly DIFF: "DIFF";
  readonly DIFF_AS_PERC: "DIFF_AS_PERC";
  readonly MOVING_AVERAGE: "MOVING_AVERAGE";
  readonly PERCENT_OF_TOTAL: "PERCENT_OF_TOTAL";
  readonly PERC_DIFF: "PERC_DIFF";
  readonly POP_CURRENT_DIFF: "POP_CURRENT_DIFF";
  readonly POP_CURRENT_DIFF_AS_PERC: "POP_CURRENT_DIFF_AS_PERC";
  readonly POP_OVERTIME_DIFF: "POP_OVERTIME_DIFF";
  readonly POP_OVERTIME_DIFF_AS_PERC: "POP_OVERTIME_DIFF_AS_PERC";
  readonly RUNNING_SUM: "RUNNING_SUM";
};
export type ComparisonMethodType =
  (typeof ComparisonMethodType)[keyof typeof ComparisonMethodType];
export interface TopicIRComparisonMethod {
  Type?: ComparisonMethodType | undefined;
  Period?: TopicTimeGranularity | undefined;
  WindowSize?: number | undefined;
}
export interface TopicIRMetric {
  MetricId?: Identifier | undefined;
  Function?: AggFunction | undefined;
  Operands?: Identifier[] | undefined;
  ComparisonMethod?: TopicIRComparisonMethod | undefined;
  Expression?: string | undefined;
  CalculatedFieldReferences?: Identifier[] | undefined;
  DisplayFormat?: DisplayFormat | undefined;
  DisplayFormatOptions?: DisplayFormatOptions | undefined;
  NamedEntity?: NamedEntityRef | undefined;
}
export interface VisualOptions {
  type?: string | undefined;
}
export interface TopicIR {
  Metrics?: TopicIRMetric[] | undefined;
  GroupByList?: TopicIRGroupBy[] | undefined;
  Filters?: TopicIRFilterOption[][] | undefined;
  Sort?: TopicSortClause | undefined;
  ContributionAnalysis?: TopicIRContributionAnalysis | undefined;
  Visual?: VisualOptions | undefined;
}
export declare const VisualRole: {
  readonly COMPLIMENTARY: "COMPLIMENTARY";
  readonly FALLBACK: "FALLBACK";
  readonly FRAGMENT: "FRAGMENT";
  readonly MULTI_INTENT: "MULTI_INTENT";
  readonly PRIMARY: "PRIMARY";
};
export type VisualRole = (typeof VisualRole)[keyof typeof VisualRole];
export interface Slot {
  SlotId?: string | undefined;
  VisualId?: string | undefined;
}
export interface TopicTemplate {
  TemplateType?: string | undefined;
  Slots?: Slot[] | undefined;
}
export declare const ReviewedAnswerErrorCode: {
  readonly DATASET_DOES_NOT_EXIST: "DATASET_DOES_NOT_EXIST";
  readonly DUPLICATED_ANSWER: "DUPLICATED_ANSWER";
  readonly INTERNAL_ERROR: "INTERNAL_ERROR";
  readonly INVALID_DATA: "INVALID_DATA";
  readonly INVALID_DATASET_ARN: "INVALID_DATASET_ARN";
  readonly MISSING_ANSWER: "MISSING_ANSWER";
  readonly MISSING_REQUIRED_FIELDS: "MISSING_REQUIRED_FIELDS";
};
export type ReviewedAnswerErrorCode =
  (typeof ReviewedAnswerErrorCode)[keyof typeof ReviewedAnswerErrorCode];
export interface InvalidTopicReviewedAnswer {
  AnswerId?: string | undefined;
  Error?: ReviewedAnswerErrorCode | undefined;
}
export interface SucceededTopicReviewedAnswer {
  AnswerId?: string | undefined;
}
export interface BatchCreateTopicReviewedAnswerResponse {
  TopicId?: string | undefined;
  TopicArn?: string | undefined;
  SucceededAnswers?: SucceededTopicReviewedAnswer[] | undefined;
  InvalidAnswers?: InvalidTopicReviewedAnswer[] | undefined;
  Status?: number | undefined;
  RequestId?: string | undefined;
}
export declare class InternalFailureException extends __BaseException {
  readonly name: "InternalFailureException";
  readonly $fault: "server";
  Message?: string | undefined;
  RequestId?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InternalFailureException, __BaseException>
  );
}
export declare class InvalidParameterValueException extends __BaseException {
  readonly name: "InvalidParameterValueException";
  readonly $fault: "client";
  Message?: string | undefined;
  RequestId?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<InvalidParameterValueException, __BaseException>
  );
}
export declare const ExceptionResourceType: {
  readonly ACCOUNT_SETTINGS: "ACCOUNT_SETTINGS";
  readonly DATA_SET: "DATA_SET";
  readonly DATA_SOURCE: "DATA_SOURCE";
  readonly GROUP: "GROUP";
  readonly IAMPOLICY_ASSIGNMENT: "IAMPOLICY_ASSIGNMENT";
  readonly INGESTION: "INGESTION";
  readonly NAMESPACE: "NAMESPACE";
  readonly USER: "USER";
  readonly VPC_CONNECTION: "VPC_CONNECTION";
};
export type ExceptionResourceType =
  (typeof ExceptionResourceType)[keyof typeof ExceptionResourceType];
export declare class ResourceNotFoundException extends __BaseException {
  readonly name: "ResourceNotFoundException";
  readonly $fault: "client";
  Message?: string | undefined;
  ResourceType?: ExceptionResourceType | undefined;
  RequestId?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ResourceNotFoundException, __BaseException>
  );
}
export declare class ThrottlingException extends __BaseException {
  readonly name: "ThrottlingException";
  readonly $fault: "client";
  Message?: string | undefined;
  RequestId?: string | undefined;
  constructor(
    opts: __ExceptionOptionType<ThrottlingException, __BaseException>
  );
}
export interface BatchDeleteTopicReviewedAnswerRequest {
  AwsAccountId: string | undefined;
  TopicId: string | undefined;
  AnswerIds?: string[] | undefined;
}
export interface BatchDeleteTopicReviewedAnswerResponse {
  TopicId?: string | undefined;
  TopicArn?: string | undefined;
  SucceededAnswers?: SucceededTopicReviewedAnswer[] | undefined;
  InvalidAnswers?: InvalidTopicReviewedAnswer[] | undefined;
  RequestId?: string | undefined;
  Status?: number | undefined;
}
export declare class ConflictException extends __BaseException {
  readonly name: "ConflictException";
  readonly $fault: "client";
  Message?: string | undefined;
  RequestId?: string | undefined;
  constructor(opts: __ExceptionOptionType<ConflictException, __BaseException>);
}
export interface BookmarksConfigurations {
  Enabled: boolean | undefined;
}
export interface BorderStyle {
  Show?: boolean | undefined;
}
export type ImageSource =
  | ImageSource.PublicUrlMember
  | ImageSource.S3UriMember
  | ImageSource.$UnknownMember;
export declare namespace ImageSource {
  interface PublicUrlMember {
    PublicUrl: string;
    S3Uri?: never;
    $unknown?: never;
  }
  interface S3UriMember {
    PublicUrl?: never;
    S3Uri: string;
    $unknown?: never;
  }
  interface $UnknownMember {
    PublicUrl?: never;
    S3Uri?: never;
    $unknown: [string, any];
  }
  interface Visitor<T> {
    PublicUrl: (value: string) => T;
    S3Uri: (value: string) => T;
    _: (name: string, value: any) => T;
  }
  const visit: <T>(value: ImageSource, visitor: Visitor<T>) => T;
}
export interface ImageConfiguration {
  Source?: ImageSource | undefined;
}
export interface ImageSetConfiguration {
  Original: ImageConfiguration | undefined;
}
export interface LogoSetConfiguration {
  Primary: ImageSetConfiguration | undefined;
  Favicon?: ImageSetConfiguration | undefined;
}
export interface LogoConfiguration {
  AltText: string | undefined;
  LogoSet: LogoSetConfiguration | undefined;
}
export interface BrandDefinition {
  BrandName: string | undefined;
  Description?: string | undefined;
  ApplicationTheme?: ApplicationTheme | undefined;
  LogoConfiguration?: LogoConfiguration | undefined;
}
export declare const BrandStatus: {
  readonly CREATE_FAILED: "CREATE_FAILED";
  readonly CREATE_IN_PROGRESS: "CREATE_IN_PROGRESS";
  readonly CREATE_SUCCEEDED: "CREATE_SUCCEEDED";
  readonly DELETE_FAILED: "DELETE_FAILED";
  readonly DELETE_IN_PROGRESS: "DELETE_IN_PROGRESS";
};
export type BrandStatus = (typeof BrandStatus)[keyof typeof BrandStatus];
export interface Image {
  Source?: ImageSource | undefined;
  GeneratedImageUrl?: string | undefined;
}
export interface ImageSet {
  Original: Image | undefined;
  Height64?: Image | undefined;
  Height32?: Image | undefined;
}
export interface LogoSet {
  Primary: ImageSet | undefined;
  Favicon?: ImageSet | undefined;
}
export interface Logo {
  AltText: string | undefined;
  LogoSet: LogoSet | undefined;
}
export declare const BrandVersionStatus: {
  readonly CREATE_FAILED: "CREATE_FAILED";
  readonly CREATE_IN_PROGRESS: "CREATE_IN_PROGRESS";
  readonly CREATE_SUCCEEDED: "CREATE_SUCCEEDED";
};
export type BrandVersionStatus =
  (typeof BrandVersionStatus)[keyof typeof BrandVersionStatus];
export interface BrandDetail {
  BrandId: string | undefined;
  Arn?: string | undefined;
  BrandStatus?: BrandStatus | undefined;
  CreatedTime?: Date | undefined;
  LastUpdatedTime?: Date | undefined;
  VersionId?: string | undefined;
  VersionStatus?: BrandVersionStatus | undefined;
  Errors?: string[] | undefined;
  Logo?: Logo | undefined;
}
export interface BrandSummary {
  Arn?: string | undefined;
  BrandId?: string | undefined;
  BrandName?: string | undefined;
  Description?: string | undefined;
  BrandStatus?: BrandStatus | undefined;
  CreatedTime?: Date | undefined;
  LastUpdatedTime?: Date | undefined;
}
export declare const TextConditionalFormatFilterSensitiveLog: (
  obj: TextConditionalFormat
) => any;
export declare const PivotTableCellConditionalFormattingFilterSensitiveLog: (
  obj: PivotTableCellConditionalFormatting
) => any;
export declare const PivotTableConditionalFormattingOptionFilterSensitiveLog: (
  obj: PivotTableConditionalFormattingOption
) => any;
export declare const PivotTableConditionalFormattingFilterSensitiveLog: (
  obj: PivotTableConditionalFormatting
) => any;
export declare const PivotTableVisualFilterSensitiveLog: (
  obj: PivotTableVisual
) => any;
export declare const PluginVisualFieldWellFilterSensitiveLog: (
  obj: PluginVisualFieldWell
) => any;
export declare const PluginVisualConfigurationFilterSensitiveLog: (
  obj: PluginVisualConfiguration
) => any;
export declare const PluginVisualFilterSensitiveLog: (obj: PluginVisual) => any;
export declare const RadarChartAggregatedFieldWellsFilterSensitiveLog: (
  obj: RadarChartAggregatedFieldWells
) => any;
export declare const RadarChartFieldWellsFilterSensitiveLog: (
  obj: RadarChartFieldWells
) => any;
export declare const RadarChartConfigurationFilterSensitiveLog: (
  obj: RadarChartConfiguration
) => any;
export declare const RadarChartVisualFilterSensitiveLog: (
  obj: RadarChartVisual
) => any;
export declare const SankeyDiagramAggregatedFieldWellsFilterSensitiveLog: (
  obj: SankeyDiagramAggregatedFieldWells
) => any;
export declare const SankeyDiagramFieldWellsFilterSensitiveLog: (
  obj: SankeyDiagramFieldWells
) => any;
export declare const SankeyDiagramChartConfigurationFilterSensitiveLog: (
  obj: SankeyDiagramChartConfiguration
) => any;
export declare const SankeyDiagramVisualFilterSensitiveLog: (
  obj: SankeyDiagramVisual
) => any;
export declare const ScatterPlotCategoricallyAggregatedFieldWellsFilterSensitiveLog: (
  obj: ScatterPlotCategoricallyAggregatedFieldWells
) => any;
export declare const ScatterPlotUnaggregatedFieldWellsFilterSensitiveLog: (
  obj: ScatterPlotUnaggregatedFieldWells
) => any;
export declare const ScatterPlotFieldWellsFilterSensitiveLog: (
  obj: ScatterPlotFieldWells
) => any;
export declare const ScatterPlotConfigurationFilterSensitiveLog: (
  obj: ScatterPlotConfiguration
) => any;
export declare const ScatterPlotVisualFilterSensitiveLog: (
  obj: ScatterPlotVisual
) => any;
export declare const TableAggregatedFieldWellsFilterSensitiveLog: (
  obj: TableAggregatedFieldWells
) => any;
export declare const TableUnaggregatedFieldWellsFilterSensitiveLog: (
  obj: TableUnaggregatedFieldWells
) => any;
export declare const TableFieldWellsFilterSensitiveLog: (
  obj: TableFieldWells
) => any;
export declare const TableConfigurationFilterSensitiveLog: (
  obj: TableConfiguration
) => any;
export declare const TableCellConditionalFormattingFilterSensitiveLog: (
  obj: TableCellConditionalFormatting
) => any;
export declare const TableRowConditionalFormattingFilterSensitiveLog: (
  obj: TableRowConditionalFormatting
) => any;
export declare const TableConditionalFormattingOptionFilterSensitiveLog: (
  obj: TableConditionalFormattingOption
) => any;
export declare const TableConditionalFormattingFilterSensitiveLog: (
  obj: TableConditionalFormatting
) => any;
export declare const TableVisualFilterSensitiveLog: (obj: TableVisual) => any;
export declare const TreeMapAggregatedFieldWellsFilterSensitiveLog: (
  obj: TreeMapAggregatedFieldWells
) => any;
export declare const TreeMapFieldWellsFilterSensitiveLog: (
  obj: TreeMapFieldWells
) => any;
export declare const TreeMapConfigurationFilterSensitiveLog: (
  obj: TreeMapConfiguration
) => any;
export declare const TreeMapVisualFilterSensitiveLog: (
  obj: TreeMapVisual
) => any;
export declare const WaterfallChartAggregatedFieldWellsFilterSensitiveLog: (
  obj: WaterfallChartAggregatedFieldWells
) => any;
export declare const WaterfallChartFieldWellsFilterSensitiveLog: (
  obj: WaterfallChartFieldWells
) => any;
export declare const WaterfallChartConfigurationFilterSensitiveLog: (
  obj: WaterfallChartConfiguration
) => any;
export declare const WaterfallVisualFilterSensitiveLog: (
  obj: WaterfallVisual
) => any;
export declare const WordCloudAggregatedFieldWellsFilterSensitiveLog: (
  obj: WordCloudAggregatedFieldWells
) => any;
export declare const WordCloudFieldWellsFilterSensitiveLog: (
  obj: WordCloudFieldWells
) => any;
export declare const WordCloudChartConfigurationFilterSensitiveLog: (
  obj: WordCloudChartConfiguration
) => any;
export declare const WordCloudVisualFilterSensitiveLog: (
  obj: WordCloudVisual
) => any;
export declare const VisualFilterSensitiveLog: (obj: Visual) => any;
export declare const SheetDefinitionFilterSensitiveLog: (
  obj: SheetDefinition
) => any;
export declare const AnalysisDefinitionFilterSensitiveLog: (
  obj: AnalysisDefinition
) => any;
export declare const SnapshotJobS3ResultFilterSensitiveLog: (
  obj: SnapshotJobS3Result
) => any;
export declare const SnapshotJobResultFileGroupFilterSensitiveLog: (
  obj: SnapshotJobResultFileGroup
) => any;
export declare const AnonymousUserSnapshotJobResultFilterSensitiveLog: (
  obj: AnonymousUserSnapshotJobResult
) => any;
export declare const AssetBundleImportJobDataSourceCredentialPairFilterSensitiveLog: (
  obj: AssetBundleImportJobDataSourceCredentialPair
) => any;
export declare const AssetBundleImportJobDataSourceCredentialsFilterSensitiveLog: (
  obj: AssetBundleImportJobDataSourceCredentials
) => any;
export declare const AssetBundleImportJobDataSourceOverrideParametersFilterSensitiveLog: (
  obj: AssetBundleImportJobDataSourceOverrideParameters
) => any;
export declare const AssetBundleImportJobOverrideParametersFilterSensitiveLog: (
  obj: AssetBundleImportJobOverrideParameters
) => any;
export declare const AssetBundleImportSourceFilterSensitiveLog: (
  obj: AssetBundleImportSource
) => any;
export declare const AssetBundleImportSourceDescriptionFilterSensitiveLog: (
  obj: AssetBundleImportSourceDescription
) => any;
export declare const TopicIRMetricFilterSensitiveLog: (
  obj: TopicIRMetric
) => any;
export declare const TopicIRFilterSensitiveLog: (obj: TopicIR) => any;
